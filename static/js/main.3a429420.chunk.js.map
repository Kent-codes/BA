{"version":3,"sources":["assets/img/logo.svg","assets/img/manual.pdf","header/HeaderComponent.js","globalData/SelectedIndex.js","modals/ModalTable.js","globalData/DecidedIndex.js","comComponents/SnackbarComponent.js","modals/MaterialModal.js","globalData/SakuseiPatternContext.js","globalData/SearchDataContext.js","searchForm/SearchForm.js","globalData/Details_changed_flg.js","stockInfo/table/DynTable.js","stockInfo/StockInfo.js","details/Details.js","App.js","index.js"],"names":["HeaderComponent","className","href","Pdf","target","rel","src","logo","alt","id","SelectedIndex","createContext","columns","label","minWidth","useStyles","makeStyles","root","width","container","maxHeight","tableHead","textAlign","ModalTable","props","classes","useContext","selected_codes","selected_names","setSelected_code","setSelected_name","useState","old_row","set_old_row","name","code","row_data","set_row_data","useEffect","data","Paper","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","map","column","TableCell","style","TableBody","row","i","hover","onClick","event","parentNode","backgroundColor","console","log","children","innerText","_name","handleClick","onDoubleClick","e","align","size","defaultProps","DecidedIndex","Alert","elevation","variant","theme","marginTop","spacing","zIndex","display_true","display","position","background","opacity","height","top","left","display_false","SnakbarComponent","React","open","setOpen","handleClose","reason","onKeyDown","Snackbar","autoHideDuration","onClose","bottom","transform","severity","message","address","maxWidth","media","paper","outline","palette","border","boxShadow","shadows","form","margin","formInput","marginRight","color","borderBottomColor","borderColor","cardButtons","justifyContent","fontBold","fontWeight","getModalStyle","MaterialModal","title","api_name","setCode","setName","search_btn","set_search_btn","table_data","settable_data","selected_code","selected_name","decided_codes_itm","decided_names_itm","decided_codes_loc","decided_names_loc","decided_codes_in_loc","decided_names_in_loc","decided_codes_in_line","decided_names_in_line","decided_itm_flags","decided_loc_flags","decided_in_loc_flags","decided_in_line_flags","set_decided_code_itm","set_decided_name_itm","set_decided_code_loc","set_decided_name_loc","set_decided_code_in_loc","set_decided_name_in_loc","set_decided_code_line","set_decided_name_line","set_decided_itm_flag","set_decided_loc_flag","decided_in_loc_flag","set_decided_in_loc_flag","set_decided_in_line_flag","a","preventDefault","controller","AbortController","setTimeout","abort","regex","code_","replace","get_url","fetch","encodeURI","signal","response","json","raw","Array","isArray","render","error","modalStyle","body","Card","CardContent","Typography","gutterBottom","component","TextField","autoFocus","value","onChange","Button","type","disabled","startIcon","SearchIcon","CardActions","tabIndex","Modal","aria-labelledby","aria-describedby","SakuseiPatternContext","SearchDataContext","padding","SearchForm","saku","saku_name","search_data","set_search_data","decided_code_itm","decided_name_itm","decided_itm_flag","decided_code_loc","decided_name_loc","decided_loc_flag","itm_cd","set_itm_cd","out_loc_cd","set_out_loc_cd","itm_name","set_item_name","loc_name","set_loc_name","seach_clicked","set_seach_clicked","sakusei","set_sakusei","sakusei_name","set_sakusei_name","root_url","window","location","num","lastIndexOf","result","substr","empty_err_chk","ITM_empty_flg","LOC_empty_flg","onSearch_Code","document","activeElement","blur","empty_err_flag","status","names","length","focusout_zairyo","res","ITM_NM","focusout_basho","LOC_NM","method","includes","key","saku_data","inputValue","Number","InputProps","inputProps","min","max","required","onBlur","Search","Details_changed_flg","DynTable","idx","details","set_selected_index","details_changed_flag","set_details_changed_flag","radio_check","confirm","checked","set_table_data","unit_qty","toLocaleString","useMemo","Header","accessor","tableInstance","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getRowProps","cells","cell","getCellProps","StockInfo","input","borderWidth","borderBottomWidth","fontSize","marginLeft","autocom","option","inputRoot","Date","prototype","isValid","this","getTime","Details","selected_index","decided_code_in_loc","decided_name_in_loc","decided_code_in_line","decided_name_in_line","decided_in_line_flag","set_item_cd","out_pl_cd","set_out_pl_cd","out_pl_cd_name","set_out_pl_cd_name","out_line_cd","set_out_line_cd","out_line_cd_name","set_out_line_cd_name","in_pl_cd","set_in_pl_cd","in_pl_cd_name","set_in_pl_cd_name","in_line_cd","set_in_line_cd","in_line_cd_name","set_in_line_cd_name","set_unit_qty","max_unit_qty","set_max_unit_qty","unit_cd","set_unit_cd","lot_no","set_lot_no","sub_lot_no","set_sub_lot_no","usr_cd","set_usr_cd","usr_cd_name","set_usr_cd_name","toISOString","slice","act_dt","set_act_dt","ac_dt","set_ac_dt","inst_no","set_inst_no","sakuzu_data","set_sakuzu_data","sakuzu_temp","set_sakuzu_temp","submitRefClicked","set_submitRefClicked","error_messages","url","grab_inst_no_data","out_line_name","out_loc_name","handle_staff_input","undefined","USR_NM","focusout_nyuko_basho","focusin_nyuko_line","get_url2","response2","res2","getElementById","focus","focusout_nyuko_line","STR_LN_NM","check1","push","check2","check3","ignore_chk_list","check4","replaceAll","check_handle_staff","register","post_api","change_to_null","content","myHeaders","Headers","append","requestOptions","JSON","stringify","redirect","new_selected_index","new_unit_qty","new_search_data","master_check_flg","on_register_form","check_flg","join","paddingTop","paddingBottom","onFocus","val","isInteger","Intl","NumberFormat","format","handle_unit_qty","lang","maxLength","FormControl","Autocomplete","options","noOptions","autoHighlight","autoComplete","autoSelect","sakuzu_code","split","getOptionLabel","renderInput","params","onInput","App","set_decided_code_in_line","set_decided_name_in_line","Provider","createMuiTheme","primary","light","main","dark","contrastText","secondary","jaJP","ReactDOM","ThemeProvider","CssBaseline"],"mappings":"0QAAe,MAA0B,iCCA1B,G,OAAA,IAA0B,oCCsB1BA,MAnBf,WACI,OACI,mCACI,oBAAIC,UAAU,aAAd,8DACA,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,SAAf,SACI,mBAAGC,KAAMC,EAAKC,OAAO,SAASC,IAAI,aAAlC,8CAEJ,sBAAKJ,UAAU,OAAf,UACI,qBAAKA,UAAU,UAAf,SACI,qBAAKK,IAAKC,EAAMC,IAAI,iBAExB,mBAAGC,GAAG,UAAN,8B,2LCZPC,EAAgBC,wBAAc,MCcrCC,EAAU,CACZ,CAAEH,GAAI,OAAQI,MAAO,qBAAOC,SAAU,IACtC,CAAEL,GAAI,OAAQI,MAAO,eAAMC,SAAU,MAKnCC,EAAYC,YAAW,CACzBC,KAAM,CACFC,MAAO,QAEXC,UAAW,CACPC,UAAW,KAEfC,UAAW,CACPC,UAAW,UAQJ,SAASC,EAAWC,GAC/B,IAAMC,EAAUV,IADsB,EAWlCW,qBAAWhB,GAFXiB,EATkC,EASlCA,eACAC,EAVkC,EAUlCA,eAEKC,EAZ6B,YAYTF,EAZS,MAa7BG,EAb6B,YAaTF,EAbS,QAePG,mBAAS,aAfF,mBAe/BC,EAf+B,KAetBC,EAfsB,OA0CLF,mBAAS,CAAC,CAAEG,KAAM,GAAIC,KAAM,MA1CvB,mBA0C/BC,EA1C+B,KA0CrBC,EA1CqB,KAiDtC,OALAC,qBAAU,WACND,EAAa,CAAC,CAAEH,KAAM,GAAIC,KAAM,MAChCE,EAAa,CAAC,CAAEH,KAAM,GAAIC,KAAM,MAChCE,EAAab,EAAMe,QACpB,CAACf,IAEA,cAACgB,EAAA,EAAD,CAAOvC,UAAWwB,EAAQN,UAA1B,SACI,cAACsB,EAAA,EAAD,CAAgBxC,UAAWwB,EAAQN,UAAnC,SACI,eAACuB,EAAA,EAAD,CAAOC,cAAY,EAACC,aAAW,eAA/B,UACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACKlC,EAAQmC,KAAI,SAACC,GAAD,OACT,cAACC,EAAA,EAAD,CAEIhD,UAAWwB,EAAQJ,UACnB6B,MAAO,CAAEpC,SAAUkC,EAAOlC,UAH9B,SAKKkC,EAAOnC,OAJHmC,EAAOvC,WAS5B,cAAC0C,EAAA,EAAD,iBACKf,QADL,IACKA,OADL,EACKA,EAAUW,KAAI,SAACK,EAAKC,GAAN,OACX,eAACP,EAAA,EAAD,CACI7C,UAAW,OACXqD,OAAK,EACLC,QAAS,SAAAC,GAAK,OAvDtB,SAACA,GAED,cAAZxB,GACAwB,EAAMpD,OAAOqD,WAAWP,MAAMQ,gBAAkB,UAChDzB,EAAYuB,EAAMpD,OAAOqD,cAGzBE,QAAQC,IAAI,gBACZ5B,EAAQkB,MAAMQ,gBAAkB,UAChCF,EAAMpD,OAAOqD,WAAWP,MAAMQ,gBAAkB,UAChDzB,EAAYuB,EAAMpD,OAAOqD,aAE7B,IAAMtB,EAAOqB,EAAMpD,OAAOqD,WAAWI,SAAS,GAAGC,UAC3CC,EAAQP,EAAMpD,OAAOqD,WAAWI,SAAS,GAAGC,UAGlDjC,EAAiBM,GACjBL,EAAiBiC,GAsCyBC,CAAYR,EAAOJ,EAAIlB,OACzC+B,cAAe,SAAAC,KAEfhB,MAAO,CAAEhC,MAAO,QANpB,UAQI,cAAC+B,EAAA,EAAD,CAAWkB,MAAM,OAAOC,KAAK,QAA7B,SAAuChB,EAAIjB,OAC3C,cAACc,EAAA,EAAD,CAAWkB,MAAM,OAAOC,KAAK,QAA7B,SAAsChB,EAAIlB,SAT9C,UAKYmB,GALZ,OAKgBD,EAAIlB,mBAahDX,EAAW8C,aAAe,CACtB9B,KAAM,CAAC,CAAEJ,KAAM,GAAID,KAAM,MC5HtB,IAAMoC,EAAe3D,wBAAc,M,0BCE1C,SAAS4D,EAAM/C,GACX,OAAO,cAAC,IAAD,aAAUgD,UAAW,EAAGC,QAAQ,UAAajD,IAGxD,IAAMT,EAAYC,aAAW,SAAC0D,GAAD,MAAY,CACrCzD,KAAM,CACFC,MAAO,OACP,YAAa,CACTyD,UAAWD,EAAME,QAAQ,IAE7B,0BAA2B,CACvBC,OAAQ,aAKdC,EAAe,CACjBC,QAAS,QACTC,SAAU,WACVC,WAAY,iBACZC,QAAS,KACTC,OAAQ,OACRjE,MAAO,OACPkE,IAAK,IACLC,KAAM,KAGJC,EAAgB,CAClBP,QAAS,OACTC,SAAU,WACVC,WAAY,iBACZC,QAAS,KACTC,OAAQ,OACRjE,MAAO,OACPkE,IAAK,IACLC,KAAM,KAGK,SAASE,EAAiB/D,GACrC,IAAMC,EAAUV,IAD4B,EAEpByE,IAAMzD,UAAS,GAFK,mBAErC0D,EAFqC,KAE/BC,EAF+B,KAQtCC,EAAc,SAACnC,EAAOoC,GAET,cAAXA,GAGJF,GAAQ,IASZ,OACI,sBAAKzF,UAAWwB,EAAQR,KAAM4E,UAAW,SAAA3B,GAAC,OAAIP,QAAQC,IAAI,gBAA1D,UACI,qBAAK3D,UAAU,qBACXiD,OAAgB,IAATuC,EAAgBX,EAAeQ,IAE1C,cAACQ,EAAA,EAAD,CAAUL,KAAMA,EAAMM,iBAAkB,OAASC,QAASL,EAAazC,MAAO,CAC1E+C,OAAQ,EACRb,IAAK,MACLc,UAAW,yBAHf,SAKI,cAAC,EAAD,CAAOF,QAASL,EAAaQ,SAAU3E,EAAM2E,SAA7C,SACK3E,EAAM4E,e,YCtDrBC,EAAU,6BAKVtF,EAAYC,aAAW,SAAC0D,GAAD,MAAY,CACvCzD,KAAM,CACJqF,SAAU,KAEZC,MAAO,CACLpB,OAAQ,KAEVqB,MAAO,CACLC,QAAS,cACTzB,SAAU,WACV9D,MAAO,IACPwC,gBAAiBgB,EAAMgC,QAAQzB,WAAWuB,MAC1CG,OAAQ,2BACRC,UAAWlC,EAAMmC,QAAQ,IAG3BC,KAAM,CACJC,OAAQ,WAEVC,UAAW,CACTC,YAAa,QACbX,SAAU,IACV,sBAAuB,CACrBY,MAAO,WAGT,8BAA+B,CAC7BC,kBAAmB,WAErB,2BAA4B,CAC1B,aAAc,CACZC,YAAa,WAEf,mBAAoB,CAClBA,YAAa,WAEf,yBAA0B,CACxBA,YAAa,aAInBC,YAAa,CACXC,eAAgB,gBAElBC,SAAU,CACRC,WAAY,YAKhB,SAASC,IAIP,MAAO,CACLrC,IAAI,GAAD,OAJO,GAIP,KACHC,KAAK,GAAD,OAJO,GAIP,KACJa,UAAU,cAAD,OANC,GAMD,eALE,GAKF,OAIb,IAgPewB,EAhPO,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EACvB7F,mBAAS,IADc,mBACxCI,EADwC,KAClC0F,EADkC,OAEvB9F,mBAAS,IAFc,mBAExCG,EAFwC,KAElC4F,EAFkC,OAGV/F,oBAAS,GAHC,mBAGxCgG,EAHwC,KAG5BC,EAH4B,OAIXjG,mBAAS,CAAC,CAAEG,KAAM,GAAIC,KAAM,MAJjB,mBAIxC8F,EAJwC,KAI5BC,EAJ4B,OAOFxG,qBAAWhB,GAA9CiB,EAPqC,EAOrCA,eAAgBC,EAPqB,EAOrBA,eAPqB,cAQHD,EARG,GAQtCwG,EARsC,KAQvBtG,EARuB,mBASHD,EATG,GAStCwG,EATsC,KASvBtG,EATuB,OA4BzCJ,qBAAW4C,GAdb+D,EAd2C,EAc3CA,kBACAC,EAf2C,EAe3CA,kBACAC,EAhB2C,EAgB3CA,kBACAC,EAjB2C,EAiB3CA,kBAEAC,GAnB2C,EAmB3CA,qBACAC,GApB2C,EAoB3CA,qBACAC,GArB2C,EAqB3CA,sBACAC,GAtB2C,EAsB3CA,sBAEAC,GAxB2C,EAwB3CA,kBACAC,GAzB2C,EAyB3CA,kBACAC,GA1B2C,EA0B3CA,qBACAC,GA3B2C,EA2B3CA,sBAIOC,GA/BoC,YA+BZZ,EA/BY,MAgCpCa,GAhCoC,YAgCZZ,EAhCY,MAiCpCa,GAjCoC,YAiCZZ,EAjCY,MAkCpCa,GAlCoC,YAkCZZ,EAlCY,MAmCpCa,GAnCoC,YAmCTZ,GAnCS,MAoCpCa,GApCoC,YAoCTZ,GApCS,MAqCpCa,GArCoC,YAqCXZ,GArCW,MAsCpCa,GAtCoC,YAsCXZ,GAtCW,MAwCpCa,GAxCoC,YAwCZZ,GAxCY,MAyCpCa,GAzCoC,YAyCZZ,GAzCY,qBA0CUC,GA1CV,GA0CtCY,GA1CsC,MA0CjBC,GA1CiB,MA2CpCC,GA3CoC,YA2CRb,GA3CQ,oDAiD7C,WAA8B9E,GAA9B,yBAAA4F,EAAA,6DACE5F,EAAE6F,iBACF/B,GAAe,GACTgC,EAAa,IAAIC,gBACvBC,YAAW,kBAAMF,EAAWG,UAAS,KAJvC,SAOIjC,EAAc,IAERkC,EAAQ,QATlB,MAYUC,EAFMlI,EAEMmI,QAAQF,EAZ9B,OAcUG,EAdV,UAcuBlE,EAdvB,YAckCuB,EAdlC,YAcwD,KAAVyC,EAAe,KAAOA,EAdpE,YAcsF,KAATnI,EAAc,KAAOA,GAdlG,UAoB2BsI,MAAMC,UAAUF,GAAU,CAC/CG,OAAQV,EAAWU,SArBzB,eAoBUC,EApBV,iBAuBsBA,EAASC,OAvB/B,QAuBUC,EAvBV,OA0BIC,MAAMC,QAAQF,GAAO3C,EAAc2C,GAAO3C,EAAc,CAAC2C,IAEzDlH,QAAQC,IAAI,wBAAyBqE,GACrCD,GAAe,GA7BnB,kDA+BIA,GAAe,GACfgD,YACE,cAACzF,EAAD,CACEa,QAAQ,+GACRD,SAAS,aAGbxC,QAAQsH,MAAR,MAtCJ,QAwCEjD,GAAe,GAxCjB,2DAjD6C,sBA4F7C,IAmCMvG,GAAUV,IA/H6B,GAiIxBgB,mBAAS0F,GAAvByD,GAjIsC,wBAkIrBnJ,oBAAS,GAlIY,qBAkItC0D,GAlIsC,MAkIhCC,GAlIgC,MAyIvCC,GAAc,WAClB9D,EAAiB,IACjBC,EAAiB,IACjB4D,IAAQ,IAGJyF,GACJ,eAACC,EAAA,EAAD,CAAMlI,MAAOgI,GAAYjL,UAAWwB,GAAQ+E,MAA5C,UACE,eAAC6E,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAYC,cAAY,EAAC9G,QAAQ,KAAK+G,UAAU,KAAKrH,MAAM,SAA3D,UACGwD,EADH,kBAGA,oCACE,cAAC2D,EAAA,EAAD,CAAYC,cAAY,EAAC9G,QAAQ,KAAK+G,UAAU,KAAhD,sCAGA,uBAAMvL,UAAWwB,GAAQqF,KAAzB,UACE,cAAC2E,EAAA,EAAD,CACExL,UAAWwB,GAAQuF,UACnBnG,MAAM,qBACN4D,QAAQ,WACRL,KAAK,QACLsH,WAAS,EACTC,MAAOxJ,EACPyJ,SAAU,SAAC1H,GACT2D,EAAQ3D,EAAE9D,OAAOuL,UAGrB,cAACF,EAAA,EAAD,CACExL,UAAWwB,GAAQuF,UACnBnG,MAAM,eACN4D,QAAQ,WACRkH,MAAOzJ,EACP0J,SAAU,SAAC1H,GACT4D,EAAQ5D,EAAE9D,OAAOuL,QAEnBvH,KAAK,UAEP,cAACyH,EAAA,EAAD,CACEpH,QAAQ,YACRqH,KAAK,SACL1H,KAAK,QACL2H,SAAUhE,EACViE,UAAWC,aACX1I,QArLiC,6CAsLjC2D,MAAM,UAPR,gCAaJ,kCACE,cAAC3F,EAAD,CAAYgB,KAAM0F,EAAYL,SAAUA,SAI5C,eAACsE,EAAA,EAAD,CAAajM,UAAWwB,GAAQ4F,YAAhC,UACE,cAACwE,EAAA,EAAD,CACEzH,KAAK,QACLK,QAAQ,WACRyC,MAAM,UACNjH,UAAWwB,GAAQ8F,SACnBhE,QA3Gc,WACE,KAAlB4E,GAA0C,KAAlBC,GAA0C,OAAlBD,GAA4C,OAAlBC,IAK7D,YAAbR,GACFjE,QAAQC,IAAIuE,GACZc,GAAqBd,GACrBe,GAAqBd,GACrBqB,IAAqB,GACrB/D,IAAQ,GACR/B,QAAQC,IAAIwE,IACU,UAAbR,GACTuB,GAAqBhB,GACrBiB,GAAqBhB,GACrBsB,IAAqB,GACrB/F,QAAQC,IAAIwE,GACZ1C,IAAQ,IACc,eAAbkC,GACTyB,GAAwBlB,GACxBmB,GAAwBlB,GACxBwB,IAAwB,GACxBjG,QAAQC,IAAI,yBAA0B+F,IACtCjE,IAAQ,IACc,cAAbkC,IACT2B,GAAsBpB,GACtBqB,GAAsBpB,GACtByB,IAAyB,GACzBnE,IAAQ,IAEV7D,EAAiB,IACjBC,EAAiB,MAsEb,0BASA,cAAC+J,EAAA,EAAD,CACEtI,QAASoC,GACTvB,KAAK,QACLK,QAAQ,WACRyC,MAAM,UACNjH,UAAWwB,GAAQ8F,SALrB,kDAcN,OACE,gCACE,cAACsE,EAAA,EAAD,CACEM,SAAS,KACT5I,QAzFa,WAEjBmC,IAAQ,IAwFJjB,QAAQ,WACRyC,MAAM,UACN9C,KAAK,QALP,0BASA,cAACgI,EAAA,EAAD,CACE3G,KAAMA,GACNO,QAASL,GACT0G,kBAAgB,qBAChBC,mBAAiB,2BAJnB,SAMGnB,SC/TIoB,EAAwB5L,wBAAc,MCAtC6L,EAAoB7L,wBAAc,MCWzC0F,EAAU,6BAIVtF,EAAYC,aAAW,iBAAO,CAChCC,KAAM,CACF,uBAAwB,CACpB8F,OAAQ,UACR7F,MAAO,KAEX,wBAAyB,CACrBiD,MAAO,UAEX,MAAS,CACLsI,QAAS,aAEb,sBAAuB,CACnBvF,MAAO,WAEX,8BAA+B,CAC3BC,kBAAmB,WAEvB,2BAA4B,CACxB,aAAc,CACVC,YAAa,WAEjB,mBAAoB,CAChBA,YAAa,WAEjB,yBAA0B,CACtBA,YAAa,iBAUd,SAASsF,KAAc,IAAD,EAELhL,qBAAW6K,GAA/BI,EAFyB,EAEzBA,KAAMC,EAFmB,EAEnBA,UAFmB,EAGQlL,qBAAW8K,GAA5CK,EAHyB,EAGzBA,YAAaC,EAHY,EAGZA,gBAHY,EAe7BpL,qBAAW4C,GAPX+D,EAR6B,EAQ7BA,kBACAC,EAT6B,EAS7BA,kBACAO,EAV6B,EAU7BA,kBAEAN,EAZ6B,EAY7BA,kBACAC,EAb6B,EAa7BA,kBACAM,EAd6B,EAc7BA,kBAEGiE,EAhB0B,YAgBN1E,EAhBM,MAiB1B2E,EAjB0B,YAiBN1E,EAjBM,oBAkBgBO,EAlBhB,GAkB1BoE,EAlB0B,KAkBRxD,EAlBQ,KAoB1ByD,EApB0B,YAoBN3E,EApBM,MAqB1B4E,EArB0B,YAqBN3E,EArBM,oBAsBgBM,EAtBhB,GAsB1BsE,EAtB0B,KAsBR1D,EAtBQ,OAyBJ3H,mBAAS,IAzBL,mBAyB1BsL,EAzB0B,KAyBlBC,EAzBkB,OA0BIvL,mBAAS,IA1Bb,mBA0B1BwL,EA1B0B,KA0BdC,EA1Bc,OA2BCzL,mBAAS,IA3BV,mBA2B1B0L,EA3B0B,KA2BhBC,EA3BgB,OA4BA3L,mBAAS,IA5BT,mBA4B1B4L,EA5B0B,KA4BhBC,GA5BgB,QA6BU7L,oBAAS,GA7BnB,qBA6B1B8L,GA7B0B,MA6BXC,GA7BW,qBA+BFnB,EA/BE,GA+B1BoB,GA/B0B,MA+BjBC,GA/BiB,qBAgCQpB,EAhCR,GAgC1BqB,GAhC0B,MAgCZC,GAhCY,MAoCjC5L,qBAAU,WACNgL,EAAWP,GACXW,EAAcV,GACdvD,GAAqB,KAGtB,CAACwD,IAEJ3K,qBAAU,WACNkL,EAAeN,GACfU,GAAaT,GACbzD,GAAqB,KAEtB,CAAC0D,IAEJ9K,qBAAU,WACN,IAAM6L,EAAWC,OAAOC,SAASnO,KAC7BoO,EAAMH,EAASI,YAAY,KACzBC,EAASL,EAASM,OAAOH,EAAM,EAAG,GAE9B,MAANE,GACAN,GAAiB,wCACjBF,GAAY,IAEC,MAANQ,GACPN,GAAiB,kCACjBF,GAAY,IACC,MAANQ,IACPN,GAAiB,gBACjBF,GAAY,MAEjB,CAACA,GAAaE,KAQjB,IAAMQ,GAAgB,WAClB,IAAIC,GAAgB,EAChBC,GAAgB,EAapB,OAXAjL,QAAQC,IAAIyJ,EAAQE,GACL,KAAXF,GAAgC,KAAfE,GACjBoB,GAAgB,EAChBC,GAAgB,GAEA,KAAXvB,GAAgC,KAAfE,EACtBoB,GAAgB,EAEA,KAAXtB,GAAgC,KAAfE,IACtBqB,GAAgB,GAEb,CAACD,EAAeC,IAIrBC,GAAa,uCAAG,WAAO3K,GAAP,uBAAA4F,EAAA,yDAElB5F,EAAE6F,iBACF+D,IAAkB,GAClBhB,EAAgB,IAChBgC,SAASC,cAAcC,OACjBhF,EAAa,IAAIC,gBACvBC,YAAW,kBAAMF,EAAWG,UAAS,KAChB,uEAAjB8D,GARc,uBASdjD,YAEI,cAAEzF,EAAF,CAAmBa,QAAQ,2KAA+BD,SAAS,WAXzD,6BAgBZ8I,EAAiBP,KACvB/K,QAAQC,IAAIqL,EAAe,IAC3BtL,QAAQC,IAAIqL,EAAe,KACD,IAAtBA,EAAe,KAAqC,IAAtBA,EAAe,GAnB/B,wBAoBdnB,IAAkB,GApBJ,kBAsBV9C,YACI,cAAEzF,EAAF,CAAmBa,QAAQ,mJAA2BD,SAAS,YAvBzD,YA2BQ,IAAtB8I,EAAe,KAAqC,IAAtBA,EAAe,GA3B/B,wBA4BdnB,IAAkB,GA5BJ,kBA8BV9C,YACI,cAAEzF,EAAF,CAAmBa,QAAQ,2EAAeD,SAAS,YA/B7C,YAmCQ,IAAtB8I,EAAe,KAAsC,IAAtBA,EAAe,GAnChC,wBAoCdnB,IAAkB,GApCJ,kBAsCV9C,YACI,cAAEzF,EAAF,CAAmBa,QAAQ,2EAAeD,SAAS,YAvC7C,yBA+CJoE,EA/CI,UA+CSlE,EA/CT,gBA+CwBoE,UAAU4C,GA/ClC,YA+C6C5C,UAAU8C,IA/CvD,UAgDa/C,MAAMD,EAAS,CAAEG,OAAQV,EAAWU,SAhDjD,eAgDJC,EAhDI,iBAiDSA,EAASC,OAjDlB,WAiDJrI,EAjDI,OAkDVoB,QAAQC,IAAIrB,EAAKiM,QAEG,mBAAhBjM,EAAK2M,OApDC,wBAuDNpC,EAAgBvK,EAAKiM,QACrB7K,QAAQC,IAAI,sBAAuBiJ,GACnClJ,QAAQC,IAAI,aAAcrB,EAAK4M,OAG/BrB,IAAkB,GA5DZ,8BAgEkB,gBAAnBvL,EAAI,OAhEH,wBAmENuL,IAAkB,GAnEZ,kBAqEF9C,YAEI,cAAEzF,EAAF,CAAmBa,QAAQ,yGAAoBD,SAAS,YAvE1D,WA6ENxC,QAAQC,IAAI,wCAGZD,QAAQC,IAAI,OAAQrB,EAAI,MACxBoB,QAAQC,IAAI,OAAQrB,EAAI,UACI,IAAxBA,EAAI,KAAS6M,OAlFX,oBAoF8B,IAA5B7M,EAAI,SAAa6M,OApFnB,wBAqFEtB,IAAkB,GArFpB,kBAuFM9C,YAEI,cAAEzF,EAAF,CAAmBa,QAAQ,yGAAoBD,SAAS,YAzFlE,eA6FF2H,IAAkB,GA7FhB,kBA+FE9C,YAEI,cAAEzF,EAAF,CAAmBa,QAAQ,qEAAcD,SAAS,YAjGxD,WAqG+B,IAA5B5D,EAAI,SAAa6M,OArGpB,wBAsGFtB,IAAkB,GAtGhB,kBAwGE9C,YAEI,cAAEzF,EAAF,CAAmBa,QAAQ,qEAAcD,SAAS,YA1GxD,kEAkHVxC,QAAQC,IAAR,MACAD,QAAQC,IAAI,KAAI1B,MAChByB,QAAQC,IAAiB,cAAb,KAAI1B,MAChB4L,IAAkB,GArHR,kBAwHN9C,YACI,cAAEzF,EAAF,CAAmBa,QAAQ,qHAAsBD,SAAS,cAzHxD,QA+HlB2H,IAAkB,GA/HA,2DAAH,sDAsIbuB,GAAe,uCAAG,WAAOnL,GAAP,qBAAA4F,EAAA,6DACpBnG,QAAQC,IAAI,kBADQ,SAIVyG,EAAQnG,EAAE9D,OAAOuL,MACjBpB,EALU,UAKGlE,EALH,uBAKmC,KAAVgE,EAAe,KAAOA,GAL/C,SAMOG,MAAMC,UAAUF,IANvB,cAMVI,EANU,OAOhBhH,QAAQC,IAAI+G,GAPI,UAQEA,EAASC,OARX,QAQV0E,EARU,OAShB3L,QAAQC,IAAI0L,GACG,IAAfA,EAAIF,QAAgB1B,EAAc4B,EAAI,GAAGC,QAVzB,kDAYhB5L,QAAQC,IAAR,MAZgB,0DAAH,sDAmBf4L,GAAc,uCAAG,WAAOtL,GAAP,qBAAA4F,EAAA,sEAMTO,EAAQnG,EAAE9D,OAAOuL,MACjBpB,EAPS,UAOIlE,EAPJ,sBAOmC,KAAVgE,EAAe,KAAOA,GAP/C,SASQG,MAAMC,UAAUF,IATxB,cASTI,EATS,gBAUGA,EAASC,OAVZ,OAYA,KAFT0E,EAVS,QAYXF,QAAgBxB,GAAa0B,EAAI,GAAGG,QAZzB,kDAcf9L,QAAQC,IAAR,MAde,0DAAH,sDAkDdnC,GAAUV,IAChB,OACI,0BAASN,GAAG,cAAcR,UAAWwB,GAAQR,KAA7C,UACI,uBAAMyO,OAAO,MAAb,UACI,sBAAKjP,GAAG,kBAAR,UACI,0BAASR,UAAU,oBAAnB,UACI,cAACwL,EAAA,EAAD,CACIhL,GAAG,kBACHI,MAAM,2DACNsL,UAAW,EACXR,MAAOoC,GACPlI,UAAW,SAAC3B,GACa,CACjB,IACA,IACA,IACA,KAEayL,SAASzL,EAAE0L,MAAM1L,EAAE6F,kBAExC6B,SAjDH,SAAC1H,GAElB,IAAM2L,EAAY,CACd,EAAK,mDACL,EAAK,uCACL,EAAK,iCACL,EAAK,eACL,EAAK,sEAEHC,EAAaC,OAAO7L,EAAE9D,OAAOuL,OAEZ,KAAnBzH,EAAE9D,OAAOuL,OACTqC,GAAY,IACZE,GAAiB2B,EAAU,KAEpB3L,EAAE9D,OAAOuL,MAAQ,GAAKzH,EAAE9D,OAAOuL,MAAQ,GAC9CzH,EAAE9D,OAAOuL,MAAQmE,EACjB9B,GAAY9J,EAAE9D,OAAOuL,OACrBuC,GAAiB2B,EAAU,MAG3B3L,EAAE9D,OAAOuL,MAAQmE,EACjB9B,GAAY9J,EAAE9D,OAAOuL,OACrBuC,GAAiB2B,EAAU3L,EAAE9D,OAAOuL,UAEtB,IAAlBkC,IAA0BC,IAAkB,IAyBxBhC,KAAK,SACLrH,QAAQ,WACRL,KAAK,QACL4L,WAAY,CAAEC,WAAY,CAAEC,IAAK,EAAGC,IAAK,MAE7C,cAAC1E,EAAA,EAAD,CAAWM,UAAQ,EACf9L,UAAU,uBACVQ,GAAG,eACHI,MAAM,6CACN8K,MAAOsC,GACP/K,MAAO,CAAEhC,MAAO,OAChBuD,QAAQ,WACRL,KAAK,aAGb,0BAASnE,UAAU,gBAAnB,UACI,sBAAKA,UAAU,MAAf,UACI,cAACwL,EAAA,EAAD,CACIhL,GAAG,gBACHI,MAAM,iCACN4D,QAAQ,WACRL,KAAK,QACLsH,WAAS,EACT0E,UAAQ,EACRtE,KAAK,OACLH,MAAO0B,EACPgD,OAAQhB,GACRzD,SAAU,SAAApI,GACN8J,EAAW9J,EAAMpD,OAAOuL,OACxB+B,EAAc,KAGlBzN,UAAWwB,GAAQsF,SAEvB,cAAC,EAAD,CAAeY,MAAM,iCAAQC,SAAS,eAE1C,cAAC6D,EAAA,EAAD,CAAWM,UAAQ,EACftL,GAAG,cACHI,MAAM,2BACNqC,MAAO,CAAEhC,MAAO,OAChByK,MAAO8B,EACPrJ,KAAK,gBAKjB,sBAAK3D,GAAG,SAAR,UACI,sBAAKR,UAAU,gBAAf,UAEI,yBAASA,UAAU,eAAnB,SACI,yNAGJ,0BAASA,UAAU,aAAnB,UACI,sBAAKA,UAAU,MAAf,UACI,cAACwL,EAAA,EAAD,CACIhL,GAAG,mBACHI,MAAM,iCACN4D,QAAQ,WACRL,KAAK,QACLgM,UAAQ,EACRtE,KAAK,OACLH,MAAO4B,EACP8C,OAAQb,GACR5D,SAAU,SAAApI,GACNgK,EAAehK,EAAMpD,OAAOuL,OAC5BiC,GAAa,OAIrB,cAAC,EAAD,CAAejG,MAAM,iCAAQC,SAAS,aAE1C,cAAC6D,EAAA,EAAD,CAAWM,UAAQ,EACftL,GAAG,wBACHI,MAAM,2BACNqC,MAAO,CAAEhC,MAAO,QAChByK,MAAOgC,EACPvJ,KAAK,gBAKjB,qBAAKnE,UAAU,gBAAf,SACI,cAAC4L,EAAA,EAAD,CACIpH,QAAQ,YACRL,KAAK,QACL8C,MAAM,UACN6E,SAAU8B,GACVtK,QAASsL,GACT7C,UAAW,cAACsE,EAAA,EAAD,IACXxE,KAAK,SAPT,kCAaZ,0B,qBCjdCyE,GAAsB5P,wBAAc,MCIjD,SAAS6P,KAAY,IACT3D,EAAgBnL,qBAAW8K,GAA3BK,YACA4D,EAAQ/O,qBAAWhB,GAAnB+P,IACAC,EAAYhP,qBAAW6O,IAAvBG,QACCC,EAJO,YAIeF,EAJf,oBAOyCC,EAPzC,GAOTE,EAPS,KAOaC,EAPb,KAQVC,EAAc,uBAChBhF,KAAK,QACL5J,KAAK,mBACLzB,GAAG,mBACHmL,SAAU,SAAA1H,GAIN,GAHAP,QAAQC,IAAIM,IAGiB,IAAzB0M,EAEA,OAAIxC,OAAO2C,QAAQ,uHACfF,GAAyB,GACzBF,EAAmBzM,EAAE9D,OAAOqD,WAAWA,WAAWhD,SAClDyD,EAAE9D,OAAO4Q,SAAU,KAInB9M,EAAE6F,iBACF7F,EAAE9D,OAAO4Q,SAAU,OACnBH,GAAyB,IAI1BF,EAAmBzM,EAAE9D,OAAOqD,WAAWA,WAAWhD,OA/BjD,EAmCqBsB,mBAAS8K,GAnC9B,mBAmCT5E,EAnCS,KAmCGgJ,EAnCH,KAoChB3O,qBAAU,WACNqB,QAAQC,IAAIiJ,GAIZ8D,EAAmB,MAqBnBM,EAAepE,EAAY9J,KAAI,SAAAmB,GAC3B,IAAMgN,EAAWhN,EAAEgN,SAASC,iBAC5B,OAAO,2BAAIjN,GAAX,IAAcgN,mBAKnB,CAACrE,IAEJ,IAAMjM,EAAU4E,IAAM4L,SAClB,iBAAM,CACF,CACIC,OAAQ,uCACRC,SAAU,cAEd,CACID,OAAQ,2BACRC,SAAU,gBAEd,CACID,OAAQ,qBACRC,SAAU,YAEd,CACID,OAAQ,uBACRC,SAAU,UAEd,CACID,OAAQ,yCACRC,SAAU,cAEd,CACID,OAAQ,yDACRC,SAAU,eAEd,CACID,OAAQ,6CACRC,SAAU,iBAEd,CACID,OAAQ,kBACRC,SAAU,kBAGlB,IAGEC,EAAgBC,oBAAS,CAAE5Q,UAAS2B,KAAM0F,IAG5CwJ,EAKAF,EALAE,cACAC,EAIAH,EAJAG,kBACAC,EAGAJ,EAHAI,aACAC,EAEAL,EAFAK,KACAC,EACAN,EADAM,WAUJ,OACI,qBAAK5R,UAAU,eAAf,SACI,gDAAQQ,GAAG,eAAkBgR,KAA7B,cACI,gCAEQE,EAAa5O,KAAI,SAAA+O,GAAW,OAExB,aADA,CACA,8BAAI7R,UAAU,iBAAoB6R,EAAYC,uBAA9C,aAEQD,EAAYE,QAAQjP,KAAI,SAAAC,GAAM,OAE1B,aADA,CACA,8BAAI/C,UAAW+C,EAAOvC,IAAgCuC,EAAOiP,gBAA7D,aAEKjP,EAAOgI,OAAO,YAFnB,aAAqChI,EAAOvC,gBAWpE,iDAAWiR,KAAX,aAEKE,EAAK7O,KAAI,SAAAK,GAGN,OADAyO,EAAWzO,GAGP,aADA,CACA,8BAAI3C,GAAI2C,EAAI3C,IAAQ2C,EAAI8O,eAAxB,aAEK9O,EAAI+O,MAAMpP,KAAI,SAAAqP,GAEX,OACI,4CAAInS,UAAWmS,EAAKpP,OAAOvC,IAAQ2R,EAAKC,gBAAxC,aACwB,gBAAnBD,EAAKpP,OAAOvC,GAAuBqQ,EAAcsB,EAAKpH,OAAO,6BCnK1G,IAYesH,GAZG,WACd,OACI,0BAAS7R,GAAG,aAAaR,UAAU,eAAnC,UACI,oBAAIQ,GAAG,cAAP,sCACA,cAAC+P,GAAD,Q,+DCUW7M,QAAfC,G,GAAAA,IAIFyC,I,GAJO4E,MAIG,8BAKVlK,GAAYC,aAAW,iBAAO,CAClCC,KAAM,CACJ,uBAAwB,CACtB8F,OAAQ,UACR7F,MAAO,KAET,wBAAyB,CACvBiD,MAAO,UAEToO,MAAO,CACL9F,QAAS,aAEX,sBAAuB,CACrBvF,MAAO,WAET,8BAA+B,CAC7BC,kBAAmB,WAErB,2BAA4B,CAC1B,aAAc,CACZC,YAAa,UACboL,YAAa,OAEf,mBAAoB,CAClBpL,YAAa,WAEf,yBAA0B,CACxBA,YAAa,YAGjB,iBAAkB,CAChB,+BAAgC,CAC9BD,kBAAmB,UACnBsL,kBAAmB,IAIvB,6BAA8B,CAC5BC,SAAU,SAEZ,mBAAoB,CAClBC,WAAY,oBAGhBC,QAAS,CACPnG,QAAS,MACT,oEAAqE,CACnEvL,MAAO,UAGX2R,OAAQ,CACNH,SAAU,IAEZH,MAAO,CACLG,SAAU,mBAEZI,UAAW,CACT,2EAA4E,CAC1ErG,QAAS,QAMfsG,KAAKC,UAAUC,QAAU,WAKvB,OAAOC,KAAKC,YAAcD,KAAKC,WAGjC,IAk7BeC,GAl7BC,WAAM,MAGQ1R,qBAAW6K,GAA/BI,EAHY,EAGZA,KAAMC,EAHM,EAGNA,UAHM,EAIqBlL,qBAAW8K,GAA5CK,EAJY,EAIZA,YAAaC,EAJD,EAICA,gBACb2D,EAAQ/O,qBAAWhB,GAAnB+P,IAEAC,EAAYhP,qBAAW6O,IAAvBG,QAPY,cASqCA,EATrC,GASSG,GATT,aAqBhBnP,qBAAW4C,GAPbmE,EAdkB,EAclBA,qBACAC,EAfkB,EAelBA,qBACAK,EAhBkB,EAgBlBA,qBAEAJ,EAlBkB,EAkBlBA,sBACAC,EAnBkB,EAmBlBA,sBACAI,EApBkB,EAoBlBA,sBApBkB,cAsByByH,EAtBzB,GAsBb4C,EAtBa,KAsBG1C,EAtBH,KAuBb2C,EAvBa,YAuBU7K,EAvBV,MAwBb8K,EAxBa,YAwBU7K,EAxBV,oBAyBmCK,EAzBnC,GAyBbY,EAzBa,KAyBQC,EAzBR,KA2Bb4J,EA3Ba,YA2BW7K,EA3BX,MA4Bb8K,EA5Ba,YA4BW7K,EA5BX,oBA6BqCI,EA7BrC,GA6Bb0K,EA7Ba,KA6BS7J,EA7BT,KAiCdpI,EAAUV,KAjCI,EAoCUgB,mBAAS,IApCnB,mBAoCbsL,EApCa,KAoCLsG,EApCK,OAqCe5R,mBAAS,IArCxB,mBAqCb6R,EArCa,KAqCFC,EArCE,QAsCyB9R,mBAAS,IAtClC,qBAsCb+R,GAtCa,MAsCGC,GAtCH,SAuCmBhS,mBAAS,IAvC5B,qBAuCbiS,GAvCa,MAuCAC,GAvCA,SAwC6BlS,mBAAS,IAxCtC,qBAwCbmS,GAxCa,MAwCKC,GAxCL,SAyCapS,mBAAS,IAzCtB,qBAyCbqS,GAzCa,MAyCHC,GAzCG,SA0CuBtS,mBAAS,IA1ChC,qBA0CbuS,GA1Ca,MA0CEC,GA1CF,SA4CiBxS,mBAAS,IA5C1B,qBA4CbyS,GA5Ca,MA4CDC,GA5CC,SA6C2B1S,mBAAS,IA7CpC,qBA6Cb2S,GA7Ca,MA6CIC,GA7CJ,SA+Ca5S,mBAAS,IA/CtB,qBA+CbmP,GA/Ca,MA+CH0D,GA/CG,SAgDqB7S,mBAAS,IAhD9B,qBAgDb8S,GAhDa,MAgDCC,GAhDD,SAiDW/S,mBAAS,IAjDpB,qBAiDbgT,GAjDa,MAiDJC,GAjDI,SAkDSjT,mBAAS,KAlDlB,qBAkDbkT,GAlDa,MAkDLC,GAlDK,SAoDiBnT,mBAAS,KApD1B,qBAoDboT,GApDa,MAoDDC,GApDC,SAqDSrT,mBAAS,IArDlB,qBAqDbsT,GArDa,MAqDLC,GArDK,SAsDmBvT,mBAAS,KAtD5B,qBAsDbwT,GAtDa,MAsDAC,GAtDA,SAuDSzT,oBAAS,IAAIgR,MAAO0C,cAAcC,MAAM,EAAG,KAvDpD,qBAuDbC,GAvDa,MAuDLC,GAvDK,SAwDO7T,oBAAS,IAAIgR,MAAO0C,cAAcC,MAAM,EAAG,KAxDlD,qBAwDbG,GAxDa,MAwDNC,GAxDM,SAyDW/T,mBAAS,IAzDpB,qBAyDbgU,GAzDa,MAyDJC,GAzDI,SA4DmBjU,mBAAS,CAAC,CAAEI,KAAM,qBAAOD,KAAM,oGAAsB,CAAEC,KAAM,eAAMD,KAAM,kIAA2B,CAAEC,KAAM,4BAASD,KAAM,gEAAgB,CAAEC,KAAM,4BAASD,KAAM,8HA5DrL,qBA4Db+T,GA5Da,MA4DAC,GA5DA,SA6DmBnU,mBAAS,MA7D5B,qBA6DboU,GA7Da,MA6DAC,GA7DA,qBAgEWzJ,EAhEX,GAgEboB,GAhEa,4BAiEqBnB,EAjErB,oBAkE6B7K,oBAAS,IAlEtC,qBAkEbsU,GAlEa,MAkEKC,GAlEL,MAqEhBC,GAAiB,GAErBnF,mBAAQ,YACiB,uCAAG,gCAAAtH,EAAA,sEAEhB0M,EAFgB,UAEPnQ,GAFO,kBAGCmE,MAAMgM,GAHP,cAGhB7L,EAHgB,gBAIDA,EAASC,OAJR,OAIhB4D,EAJgB,OAOtB5K,GAAI4K,GACJ0H,GAAgB1H,GARM,kDAYtB5K,GAAI,EAAD,IAZmB,0DAAH,qDAgBvB6S,KACC,IAEHnU,qBAAU,WAyBA,IAAD,mBAxBPqB,QAAQC,IAAI,uBACZD,QAAQC,IAAI,oBAAqByP,GAEV,OAAnBA,IACFxC,GAAyB,GACzBjN,GAAI,8BACJyQ,GAAa,IACbE,GAAkB,IAClBE,GAAe,IACfE,GAAoB,IACpBC,GAAa,IACbgB,IAAW,IAAI7C,MAAO0C,cAAcC,MAAM,EAAG,KAC7CI,IAAU,IAAI/C,MAAO0C,cAAcC,MAAM,EAAG,KAC5CU,GAAgB,MAChBzC,EAAY,IACZM,GAAgB,IAChBE,GAAqB,IACrBN,EAAc,IACdE,GAAmB,IACnBiB,GAAY,IAGZE,GAAW,KACXE,GAAe,OAKff,GAAa,IACbE,GAAkB,IAClBE,GAAe,IACfE,GAAoB,IACpBC,GAAa,IACbgB,IAAW,IAAI7C,MAAO0C,cAAcC,MAAM,EAAG,KAC7CI,IAAU,IAAI/C,MAAO0C,cAAcC,MAAM,EAAG,KAC5CU,GAAgB,MAGhBzC,EAAW,UAAC9G,EAAYwG,UAAb,aAAC,EAA6BhG,QACzC4G,GAAe,UAACpH,EAAYwG,UAAb,aAAC,EAA6BW,aAC7CG,GAAoB,UAACtH,EAAYwG,UAAb,aAAC,EAA6BqD,eAClD7C,EAAa,UAAChH,EAAYwG,UAAb,aAAC,EAA6B9F,YAC3CwG,GAAkB,UAAClH,EAAYwG,UAAb,aAAC,EAA6BsD,cAChD3B,GAAW,UAACnI,EAAYwG,UAAb,aAAC,EAA6B0B,SAGzCG,GAAU,UAACrI,EAAYwG,UAAb,aAAC,EAA6B4B,QACxCG,GAAc,UAACvI,EAAYwG,UAAb,aAAC,EAA6B8B,YAE5CL,GAAgB,UAACjI,EAAYwG,UAAb,aAAC,EAA6BnC,aAI/C,CAACrE,EAAawG,IAIjB/Q,qBAAU,WACRqB,QAAQC,IAAI+F,GACZ0K,GAAaf,GACbiB,GAAkBhB,GAClB3J,GAAwB,GACxBjG,QAAQC,IAAI+F,KACX,CAACA,IAEJrH,qBAAU,WACRmS,GAAejB,GACfmB,GAAoBlB,GACpB5J,GAAyB,KACxB,CAAC6J,IAEJ,IAMMkD,GAAkB,uCAAG,gCAAA9M,EAAA,yDACzBlG,GAAI,2BACWiT,IAAXxB,IAAmC,KAAXA,GAFH,uBALzBzR,GAAI,oBACJ0R,GAAW,IACXE,GAAgB,sEAGS,0CAOjBgB,EAPiB,UAORnQ,GAPQ,kBAOSoE,UAAU4K,KAPnB,SAQA7K,MAAMgM,GARN,cAQjB7L,EARiB,iBASFA,EAASC,OATP,QAUL,KADZ4D,EATiB,QAUhBY,OACHoG,GAAgBhH,EAAO,GAAGsI,QAC1BtB,GAAgB,sEAZG,kDAcvB5R,GAAI,2BAAD,MAdoB,0DAAH,qDAwBlBmT,GAAoB,uCAAG,WAAO7S,GAAP,qBAAA4F,EAAA,6DAE3ByK,GAAkB,IAClBE,GAAe,IACfE,GAAoB,IAJO,SAOnBtK,EAAQnG,EAAE9D,OAAOuL,MACjBpB,EARmB,UAQNlE,GARM,sBAQyB,KAAVgE,EAAe,KAAOA,GARrC,SAUFG,MAAMC,UAAUF,IAVd,cAUnBI,EAVmB,iBAWPA,EAASC,OAXF,QAWnB0E,EAXmB,OAYzB1L,GAAI0L,GACW,IAAfA,EAAIF,QAAgBmF,GAAkBjF,EAAI,GAAGG,QAbpB,kDAezB7L,GAAI,EAAD,IAfsB,0DAAH,sDAoBpBoT,GAAkB,uCAAG,WAAO9S,GAAP,mBAAA4F,EAAA,kEAGjBmN,EAHiB,UAGH5Q,GAHG,yBAGqBoE,UAAU2J,KACjDA,GAJkB,iEAMC5J,MAAMyM,GANP,cAMjBC,EANiB,iBAOJA,EAAUtM,OAPN,QAOjBuM,EAPiB,OAQvBxT,QAAQC,IAAIuT,GAEQ,IAAhBA,EAAK/H,SACPqF,GAAe,KACfE,GAAoB,kCACpB7F,SAASsI,eAAe,YAAYC,SAbf,kDAgBvBzT,GAAI,EAAD,IAhBoB,0DAAH,sDAsBlB0T,GAAmB,uCAAG,kCAAAxN,EAAA,sEAGlBO,EAAQI,UAAU+J,IAClBjK,EAJkB,UAILlE,GAJK,0BAI8B,KAAVgE,EAAe,KAAOA,GAJ1C,SAKDG,MAAMD,GALL,cAKlBI,EALkB,gBAMNA,EAASC,OANH,OAQT,KAFT0E,EANkB,QAQpBF,QAAgBuF,GAAoBrF,EAAI,GAAGiI,WARvB,kDAUxB5T,QAAQC,IAAR,MAVwB,0DAAH,qDAmDnB4T,GAAM,uCAAG,kCAAA1N,EAAA,yDACPE,EAAa,IAAIC,gBACvBC,YAAW,kBAAMF,EAAWG,UAAS,KAChCyJ,GAAcQ,IAAaR,EAHnB,oBAIa,IAApB7D,OAAOhC,IAJA,uBAKR6F,GAAa2C,GAAekB,KAAK,mFACjCrD,IAAYmC,GAAekB,KAAK,kFANxB,2BASR7D,GAAa2C,GAAekB,KAAK,kFATzB,yBAaLlN,EAbK,UAaQlE,GAbR,sBAa6BoE,UAAUmJ,GAbvC,YAakE,KAAbQ,GAAkB3J,UAAU2J,IAAY,MAb7F,UAgBY5J,MAAMD,EAAS,CAAEG,OAAQV,EAAWU,SAhBhD,eAgBLC,EAhBK,OAiBX/G,GAAI+G,EAASuE,QACbtL,GAAI+G,GAlBO,UAmBOA,EAASC,OAnBhB,WAmBL0E,EAnBK,OAsBa,MAApB3E,EAASuE,OAtBF,wBAuBTtL,GAAI,gBAvBK,8BAyBoB,MAApB+G,EAASuE,OAzBT,oBA2Be,IAApBa,OAAOhC,IA3BF,oBA4BPpK,QAAQC,IAAI,UACQ,mFAAhB0L,EAAIlJ,QA7BD,kFAiCPzC,QAAQC,IAAI0L,EAAIlJ,SAChBmQ,GAAekB,KAAKnI,EAAIlJ,SAlCjB,8EAyCXzC,QAAQC,IAAR,MACAD,QAAQC,IAAI,KAAM1B,MA1CP,2DAAH,qDAgDNwV,GAAM,uCAAG,gCAAA5N,EAAA,yDAEO,MAAhBkK,IAAuC,KAAhBA,GAFd,iCAIHzJ,EAJG,UAIUlE,GAJV,sBAI+BoE,UACtCmJ,GALO,YAMJnJ,UAAUuJ,KANN,SAOcxJ,MAAMD,GAPpB,cAOHI,EAPG,gBAQSA,EAASC,OARlB,UAQH0E,EARG,OAWT1L,GAAI,UAAW0L,GACS,MAApB3E,EAASuE,OAZJ,wBAaPtL,GAAI,gBAbG,8BAesB,MAApB+G,EAASuE,OAfX,wBAgBPqH,GAAekB,KAAKnI,EAAIlJ,SACxBxC,GAAI0L,EAAIlJ,SAjBD,6EAqBTxC,GAAI,iBAAD,MArBM,4FAAH,qDA6BN+T,GAAM,uCAAG,kCAAA7N,EAAA,yDACP8N,EAAkB,CAAC,IAAK,SAAK,SAAK,UAChB,IAApB7H,OAAOhC,KAAmB6J,EAAgBjI,SAAS6E,IAF1C,oBAGQ,KAAfA,GAHO,uBAIT+B,GAAekB,KAAK,oGAJX,0CASHlN,EATG,UASUlE,GATV,wBASiCoE,UACxC2J,IAVO,YAWJ3J,UAAU+J,KAXN,SAYchK,MAAMD,GAZpB,cAYHI,EAZG,iBAaSA,EAASC,OAblB,WAaH0E,EAbG,OAcT1L,GAAI4Q,IAIoB,MAApB7J,EAASuE,OAlBJ,wBAmBPtL,GAAI,gBAnBG,8BAqBsB,MAApB+G,EAASuE,OArBX,wBAsBPtL,GAAI0L,EAAIlJ,SACRmQ,GAAekB,KAAKnI,EAAIlJ,SAvBjB,6EA2BTxC,GAAI,iBAAD,MA3BM,0DAAH,qDAgCNiU,GAAS,YAEZ9H,OAAOmB,GAAS4G,WAAW,IAAK,MAAQ,GAAK/H,OAAOmB,GAAS4G,WAAW,IAAK,KAAOjD,KAAiB0B,GAAekB,KAAK,0DAGzGZ,IAAhBV,IAA6C,KAAhBA,KAAuBA,KACnDI,GAAekB,KAAK,+FAGrB1H,OAAOhC,IAAW,GAAKgC,OAAOhC,IAAW,IACxCwI,GAAekB,KAAK,6EAOlBM,GAAkB,uCAAG,gCAAAjO,EAAA,yDACzBlG,GAAI,sBAEgB,uEAAhB2R,IAAkCF,GAHb,uBAIvBkB,GAAekB,KAAK,sEAJG,0CAQjBjB,EARiB,UAQRnQ,GARQ,kBAQSoE,UAAU4K,KARnB,SASA7K,MAAMgM,GATN,cASjB7L,EATiB,iBAUFA,EAASC,OAVP,QAWD,KADhB4D,EAViB,QAWZY,OACTmH,GAAekB,KAAK,sEACO,IAAlBjJ,EAAOY,QAChBzL,QAAQC,IAAI,mBAdS,kDAkBvBA,GAAI,2BAAD,MAlBoB,0DAAH,qDAyBlBoU,GAAQ,uCAAG,gDAAAlO,EAAA,6DACTmO,EADS,UACK5R,GADL,aAET2D,EAAa,IAAIC,gBACvBC,YAAW,kBAAMF,EAAWG,UAAS,KAErCvG,GAAI,4BACJA,GAAI,iBAAkBiJ,GAChBqL,EAAiB,CAAC,IAAK,SAAK,SAAK,SAAK,GAAI,KAPjC,SAUPC,EAAU,CACd9K,SACAuG,YACAI,eACAI,SAAU8D,EAAevI,SAASyE,IAAY,KAAOA,GACrDI,WAAY0D,EAAevI,SAAS6E,IAAc,KAAOA,GACzDtD,SAAUnB,OAAOmB,GAAS4G,WAAW,IAAK,KAE1C/C,WACAgB,WACAd,UACAE,cACApH,WACAsH,UACAM,UACAE,UAEFjS,GAAI,8BAAWuU,IACTC,EAAY,IAAIC,SACZC,OAAO,eAAgB,oBAC3BC,EAAiB,CACrB7I,OAAQ,OACRsC,QAASoG,EACTjN,KAAMqN,KAAKC,UAAUN,GACrBO,SAAU,SACVhO,OAAQV,EAAWU,QAnCR,UAsCUF,MAAMyN,EAAUM,GAtC1B,eAsCP5N,EAtCO,OAuCbhH,QAAQC,IAAI+G,GAvCC,UAwCQA,EAASC,OAxCjB,WAwCP4D,EAxCO,OAyCb7K,QAAQC,IAAI,aAAc4K,GACJ,OAAlBA,EAAOU,OA1CE,iBA2CXtL,GAAI,4BA3CO,2BA4CgB,UAAlB4K,EAAOU,OA5CL,wBA6CXlE,YACE,cAACzF,EAAD,CACEa,QAAO,yIACPD,SAAS,aAhDF,4CAuDPqE,MAAM,GAAD,OAAInE,GAAJ,YAvDE,QA0DboO,GAAe,IACfJ,GAAa,IACbE,GAAkB,IAClBI,GAAoB,IACpByB,GAAgB,MAChBR,IAAW,IAAI7C,MAAO0C,cAAcC,MAAM,EAAG,KAGzCiD,EAAqBtF,EACnBuF,EAAe/L,EAAYwG,GAAgBnC,SAAWnB,OAAOmB,GAAS4G,WAAW,IAAK,MACxFe,EApES,aAoEahM,IAEVwG,GAAhB,2BACKwF,EAAgBxF,IADrB,IAEEnC,SAAU0H,IAEZ9L,EAAgB+L,GAChBjE,GAAa,IACb/D,GAAyB,GACzBF,EAAmBgI,GAEnB7J,SAASsI,eAAe,YAAYC,QA/EvB,kDAkFb1T,QAAQC,IAAR,MACAD,QAAQC,IAAI,KAAI1B,MAChB8I,YACE,cAACzF,EAAD,CACEa,QAAO,yIACPD,SAAS,aAvFA,0DAAH,qDArbM,SAkhBL2S,KAlhBK,8EAkhBpB,sBAAAhP,EAAA,sEACQ8M,KADR,uBAEQY,KAFR,uBAIQE,KAJR,uBAMQC,KANR,wBAQQI,KARR,WAYEF,KAGAjU,GAAI,oBAAqB2S,IACK,IAA1BA,GAAenH,OAhBrB,wBAiBuB,EAjBvB,kBAiBuB,OAjBvB,eAoBuB,EACnBxL,GAAI,YAAa2S,IACjB3S,GAAI,UAFe,MApBvB,kBAoBuB,MApBvB,6CAlhBoB,sBA8iBpB,IAAMmV,GAAgB,uCAAG,WAAO7U,GAAP,eAAA4F,EAAA,6DACvBgF,SAASC,cAAcC,OADA,SAIC8J,KAJD,WAML,KAFZE,EAJiB,wCAQfhB,KARe,+BASE,IAAdgB,IACT1C,IAAqB,GACrBtL,YACE,cAACzF,EAAD,CAAkBa,QAASmQ,GAAe0C,KAAK,KAAM9S,SAAS,YAZ3C,eAevBoQ,GAAiB,GACjBD,IAAqB,GAhBE,+DAAH,sDAoBtB,OACE,0BAAS7V,GAAG,UAAUR,UAAWwB,EAAQR,KAAzC,UACE,8BACE,4DAIF,uBAAMiC,MAAO,CAAEgW,WAAY,QAASC,cAAe,QAAnD,UACE,oCACE,sBAAKlZ,UAAU,UAAf,UACE,8BACE,cAACwL,EAAA,EAAD,CACEhL,GAAG,YACHyB,KAAK,YACLrB,MAAM,6CACN4D,QAAQ,WAERkH,MAAOiI,EACPxP,KAAK,QACL2H,UAAQ,MAGZ,cAACN,EAAA,EAAD,CACExL,UAAU,4BACVQ,GAAG,iBACHyB,KAAK,iBACLuC,QAAQ,WACR5D,MAAM,2BAEN8K,MAAOmI,GACP1P,KAAK,QACL2H,UAAQ,OAIZ,sBAAK9L,UAAU,UAAf,UACE,cAACwL,EAAA,EAAD,CACEhL,GAAG,cACHyB,KAAK,cACLrB,MAAM,+DACN4D,QAAQ,WACRkH,MAAOqI,GACPpI,SAAU,SAAC1H,GACT+P,GAAgB/P,EAAE9D,OAAOuL,QAE3BvH,KAAK,QACL2H,UAAQ,IAEV,cAACN,EAAA,EAAD,CACExL,UAAU,4BACVQ,GAAG,mBACHgE,QAAQ,WACR5D,MAAM,6CACN8K,MAAOuI,GACP9P,KAAK,QACL2H,UAAQ,UAId,oCACE,sBAAK9L,UAAU,UAAf,UACE,gCACE,cAACwL,EAAA,EAAD,CACEhL,GAAG,WAEHI,MAAM,6CACN+K,SAAU,SAACpI,GACT6Q,GAAa7Q,EAAMpD,OAAOuL,OAC1B4I,GAAkB,IAClB1D,GAAyB,IAE3BlF,MAAOyI,GACP/D,OAAQ0G,GAKRtS,QAAQ,WACRL,KAAK,UAEP,cAAC,EAAD,CAAeuD,MAAM,2BAAOC,SAAS,kBAEvC,cAAC6D,EAAA,EAAD,CACEhL,GAAG,gBACHgE,QAAQ,WACRxE,UAAU,cACVY,MAAM,2BAEN8K,MAAO2I,GACPlQ,KAAK,QACL2H,UAAQ,OAGZ,sBAAK9L,UAAU,UAAf,UACE,gCACE,cAACwL,EAAA,EAAD,CACEhH,QAAQ,WAERL,KAAK,QACLuH,MAAO6I,GACP/T,GAAG,aACHI,MAAM,+DACN+K,SAAU,SAACpI,GACTiR,GAAejR,EAAMpD,OAAOuL,OAC5BgJ,GAAoB,KACI,MAAvBnR,EAAMpD,OAAOuL,OACW,WAAvBnI,EAAMpD,OAAOuL,OACU,WAAvBnI,EAAMpD,OAAOuL,OACU,WAAvBnI,EAAMpD,OAAOuL,QACbgJ,GAAoB,kCACtB9D,GAAyB,IAE3BuI,QAASpC,GACT3G,OAAQiH,KAKV,cAAC,EAAD,CAAe3P,MAAM,6CAAUC,SAAS,iBAE1C,cAAC6D,EAAA,EAAD,CACEhL,GAAG,kBACHgE,QAAQ,WACR5D,MAAM,6CACNZ,UAAU,cAEV0L,MAAO+I,GACPtQ,KAAK,QACL2H,UAAQ,UAId,oCACE,sBAAK9L,UAAU,UAAf,UACE,cAACwL,EAAA,EAAD,CACEhL,GAAG,WAEHI,MAAM,eACN4D,QAAQ,WACRqH,KAAK,OAGL1H,KAAK,QACLyB,UAAW,SAAC3B,GACW,CAAC,IAAK,IAAK,IAAK,KACpByL,SAASzL,EAAE0L,MAAM1L,EAAE6F,kBAEtC6B,SAAU,SAAC1H,GACT,IAAMmV,EAAMnV,EAAE9D,OAAOuL,MAAMmM,WAAW,IAAK,IACvC/H,OAAOuJ,UAAUvJ,OAAOsJ,OA3dlB,SAACnV,GACvB,IAAMyH,EAAQzH,EAAE9D,OAAOuL,MAAMmM,WAAW,IAAK,IAC7C,GAAsB,IAAlB/H,OAAOpE,GAEJ,CAAC,IAAD,EAIC0N,EAHY,IAAIE,KAAKC,aAAa,MAGlBC,OAAO9N,GAK7B,OAHAhI,QAAQC,WAAY+H,GAGhBoE,OAAOpE,IAAP,UAAgBkB,EAAYwG,UAA5B,aAAgB,EAA6BnC,WAC/C0D,GAAayE,GAEbnV,EAAE9D,OAAO4O,YACThE,YACE,cAACzF,EAAD,CACEa,QAAQ,iLACRD,SAAS,iBAKbyO,GAAayE,GAtBfzE,GAAa,IAydD8E,CAAgBxV,GAChB2M,GAAyB,KAG7BlF,MAAOuF,GACPjB,WAAY,CAAEC,IAAK,EAAGyJ,KAAM,QAE9B,cAAClO,EAAA,EAAD,CACEhL,GAAG,UACHR,UAAU,gBACVY,MAAM,2BACN4D,QAAQ,WACRkH,MAAOoJ,GACP3Q,KAAK,QACL2H,UAAQ,OAGZ,sBAAK9L,UAAU,UAAf,UACE,cAACwL,EAAA,EAAD,CACEhL,GAAG,SACHI,MAAM,uBACN4D,QAA6B,IAApBsL,OAAOhC,IAAiB,WAAa,WAE9CpC,MAAOsJ,GACPrJ,SACsB,IAApBmE,OAAOhC,IACH,SAAC7J,GACDgR,GAAWhR,EAAE9D,OAAOuL,OACpBkF,GAAyB,IAEzB,aAGNzM,KAAK,QACL6L,WAAY,CAAE2J,UAAW,IACzB7N,SAA8B,IAApBgE,OAAOhC,MAEnB,cAACtC,EAAA,EAAD,CACEhL,GAAG,aACHR,UAAU,gBACVY,MAAM,mCACNoP,WAAY,CAAE2J,UAAW,IACzBnV,QAA6B,IAApBsL,OAAOhC,IAAiB,WAAa,WAE9CpC,MAAOwJ,GACPvJ,SACsB,IAApBmE,OAAOhC,IACH,SAAC7J,GACDkR,GAAelR,EAAE9D,OAAOuL,OACxBkF,GAAyB,IAEzB,aAENzM,KAAK,QACL2H,SAA8B,IAApBgE,OAAOhC,YAIvB,oCACE,qBAAK9N,UAAU,UAAf,SACE,cAAC4Z,GAAA,EAAD,CAAa5Z,UAAU,cAAvB,SACE,cAAC6Z,GAAA,EAAD,CACErZ,GAAG,UACHsZ,QAAS9D,GAWT7R,KAAK,QACL3C,QAAS,CACPR,KAAMQ,EAAQmR,QACdC,OAAQpR,EAAQoR,OAChBmH,UAAWvY,EAAQoR,OACnBN,MAAO9Q,EAAQ8Q,MACfO,UAAWrR,EAAQqR,WAErBmH,eAAa,EACbC,cAAY,EACZC,YAAU,EACVxO,MAAOwK,GACPvK,SAAU,SAACpI,EAAOmI,GAEhB,GADAkF,GAAyB,GACX,OAAVlF,EAAgB,CAClB,IAAIyO,EAAczO,EAAMxJ,KACxBiY,EAAcA,EAAYC,MAAM,KAAKpB,KAAK,IAC1CjD,GAAYoE,GAEdhE,GAAgBzK,IAGlB2O,eAAgB,SAACzH,GAEf,MADW,UAAMA,EAAO1Q,KAAb,aAAsB0Q,EAAO3Q,OAG1CqY,YAAa,SAACC,GAAD,OACX,cAAC/O,EAAA,EAAD,2BACM+O,GADN,IAEE3Z,MAAM,iCACN4D,QAAQ,qBAMlB,sBAAKxE,UAAU,UAAf,UACE,cAACwL,EAAA,EAAD,CACEhL,GAAG,SACHI,MAAM,iCACN8K,MAAO0J,GACP5Q,QAAQ,WACR4L,OAAQuG,GACRhL,SAAU,SAACpI,GACTgS,GAAgB,IAEhBF,GAAW9R,EAAMpD,OAAOuL,OACxBkF,GAAyB,IAE3BzM,KAAK,UAEP,cAACqH,EAAA,EAAD,CACEhL,GAAG,cACHR,UAAU,gBACVY,MAAM,2BACN4D,QAAQ,WACRkH,MAAO4J,GACPnR,KAAK,QACL2H,UAAQ,UAId,0BAAS9L,UAAU,cAAnB,UACE,qBAAKA,UAAU,UAAf,SACE,cAACwL,EAAA,EAAD,CACEhL,GAAG,SACHI,MAAM,qBACNiL,KAAK,OACLH,MAAOgK,GACPvR,KAAK,QAEL6L,WAAY,CAAEC,IAAK,cACnBtE,SAAU,SAACpI,GACD,IAAIuP,KAAKvP,EAAMpD,OAAOuL,OACxBsH,WACJ2C,GAAWpS,EAAMpD,OAAOuL,OACxBmK,GAAUtS,EAAMpD,OAAOuL,SAEvBiK,IAAW,IAAI7C,MAAO0C,cAAcC,MAAM,EAAG,KAC7CI,IAAU,IAAI/C,MAAO0C,cAAcC,MAAM,EAAG,MAE9C7E,GAAyB,IAG3BhL,UAAW,SAAC3B,GACI,QAAVA,EAAE0L,MACJ1L,EAAE6F,iBAEF+E,SAASsI,eAAe,gBAAgBC,cAKhD,sBACEpX,UAAU,6BACViD,MAAO,CAAEyB,UAAW,SAFtB,UAIE,cAAC8G,EAAA,EAAD,CACEhL,GAAG,QACHI,MAAM,qBACNiL,KAAK,OACLH,MAAOkK,GACPzR,KAAK,QAEL6L,WAAY,CAAEC,IAAK,cACnBtE,SAAU,SAACpI,GACD,IAAIuP,KAAKvP,EAAMpD,OAAOuL,OAC5BsH,UACE6C,GAAUtS,EAAMpD,OAAOuL,OACvBmK,IAAU,IAAI/C,MAAO0C,cAAcC,MAAM,EAAG,KAChD7E,GAAyB,IAE3B4J,QAAS,SAACjX,GACA,IAAIuP,KAAKvP,EAAMpD,OAAOuL,OAC5BsH,UACE6C,GAAUtS,EAAMpD,OAAOuL,OACvBmK,IAAU,IAAI/C,MAAO0C,cAAcC,MAAM,EAAG,QAGpD,cAAC7J,EAAA,EAAD,CACEpL,GAAG,eACHR,UAAU,iBACVwE,QAAQ,YACRL,KAAK,QACL0H,KAAK,SAELC,SAAUsK,GACV9S,QAAS,SAACW,GACRA,EAAE6F,iBACFuM,IAAqB,GACrByC,GAAiB7U,IAEnB8H,UAAW,cAAC,KAAD,IACX9E,MAAM,UAdR,uC,OC74BGwT,OApGf,WACE,IADa,EAE4C3Y,oBAAS,GAFrD,mBAEN6O,EAFM,KAEgBC,EAFhB,OAGkB9O,mBAAS,GAH3B,mBAGNgM,EAHM,KAGGC,EAHH,OAI4BjM,mBAAS,oDAJrC,mBAINkM,EAJM,KAIQC,EAJR,OAK0BnM,mBAJf,IADX,mBAKN8K,EALM,KAKOC,EALP,OAMgC/K,mBAAS,IANzC,mBAMNsR,EANM,KAMU1C,EANV,OAQ6B5O,mBAAS,MARtC,mBAQNoG,EARM,KAQStG,EART,OAS6BE,mBAAS,MATtC,mBASNqG,EATM,KASStG,EATT,OAYoCC,mBAAS,IAZ7C,mBAYNgL,EAZM,KAYY9D,EAZZ,OAaoClH,mBAAS,IAb7C,mBAaNiL,EAbM,KAaY9D,EAbZ,OAgBoCnH,mBAAS,IAhB7C,mBAgBNmL,EAhBM,KAgBY/D,EAhBZ,OAiBoCpH,mBAAS,IAjB7C,mBAiBNoL,EAjBM,KAiBY/D,EAjBZ,OAoB0CrH,mBAAS,IApBnD,mBAoBNuR,GApBM,KAoBejK,GApBf,QAqB0CtH,mBAAS,IArBnD,qBAqBNwR,GArBM,MAqBejK,GArBf,SAwB4CvH,mBAAS,IAxBrD,qBAwBNyR,GAxBM,MAwBgBmH,GAxBhB,SAyB4C5Y,mBAAS,IAzBrD,qBAyBN0R,GAzBM,MAyBgBmH,GAzBhB,SA2BoC7Y,oBAAS,GA3B7C,qBA2BNkL,GA3BM,MA2BYxD,GA3BZ,SA4BoC1H,oBAAS,GA5B7C,qBA4BNqL,GA5BM,MA4BY1D,GA5BZ,SA6B0C3H,oBAAS,GA7BnD,qBA6BN4H,GA7BM,MA6BeC,GA7Bf,SA8B4C7H,oBAAS,GA9BrD,qBA8BN2R,GA9BM,MA8BgB7J,GA9BhB,MAkCb,OACE,+BACE,cAAC0C,EAAsBsO,SAAvB,CACElP,MAAO,CACLgB,KAAM,CAACoB,EAASC,GAChBpB,UAAW,CAACqB,EAAcC,IAH9B,SAME,cAAC1B,EAAkBqO,SAAnB,CAA4BlP,MAAO,CAAEkB,cAAaC,mBAAlD,SACE,cAACpM,EAAcma,SAAf,CACElP,MAAO,CACL8E,IAAK,CAAC4C,EAAgB1C,GACtBhP,eAAgB,CAACwG,EAAetG,GAChCD,eAAgB,CAACwG,EAAetG,IAJpC,SAOE,cAACwC,EAAauW,SAAd,CACElP,MAAO,CACLtD,kBAAmB,CAAC0E,EAAkB9D,GACtCX,kBAAmB,CAAC0E,EAAkB9D,GAEtCX,kBAAmB,CAAC2E,EAAkB/D,GACtCX,kBAAmB,CAAC2E,EAAkB/D,GAEtCX,qBAAsB,CACpB6K,GACAjK,IAEFX,qBAAsB,CACpB6K,GACAjK,IAGFX,sBAAuB,CACrB6K,GACAmH,IAEF/R,sBAAuB,CACrB6K,GACAmH,IAGF/R,kBAAmB,CAACoE,GAAkBxD,IACtCX,kBAAmB,CAACsE,GAAkB1D,IACtCX,qBAAsB,CAACY,GAAoBC,IAC3CZ,sBAAuB,CAAC0K,GAAsB7J,KA7BlD,SAgCE,eAAC0G,GAAoBsK,SAArB,CACElP,MAAO,CACL+E,QAAS,CAACE,EAAsBC,IAFpC,UAKE,cAAC,EAAD,IACA,cAACnE,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,kB,wCC7FVhI,GAAQoW,aAAe,CAC3BpU,QAAS,CACPqU,QAAS,CACPC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,QAEhBC,UAAW,CACTJ,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,UAGjBE,SAEHC,IAAStQ,OACP,eAACuQ,GAAA,EAAD,CAAe7W,MAAOA,GAAtB,UAEE,cAAC8W,GAAA,EAAD,IACA,cAAC,GAAD,OAEF1M,SAASsI,eAAe,W","file":"static/js/main.3a429420.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.d5c33784.svg\";","export default __webpack_public_path__ + \"static/media/manual.04967af9.pdf\";","import logo from '../assets/img/logo.svg';\r\nimport \"./headerStyle.css\";\r\nimport Pdf from '../assets/img/manual.pdf';\r\nfunction HeaderComponent() {\r\n    return (\r\n        <header>\r\n            <h1 className=\"page_title\">移送処理簡易入力</h1>\r\n            <div className=\"header_left\">\r\n                <div className=\"manual\">\r\n                    <a href={Pdf} target=\"_blank\" rel=\"noreferrer\">マニュアル</a>\r\n                </div>\r\n                <div className=\"logo\">\r\n                    <div className=\"img_div\">\r\n                        <img src={logo} alt=\"brand logo\" />\r\n                    </div>\r\n                    <p id=\"version\">Ver1.0</p>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default HeaderComponent\r\n","import { createContext } from 'react';\r\n\r\n// this is the data obtained with 検索 button\r\nexport const SelectedIndex = createContext(null)\r\n\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\n// import TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport PropTypes from 'prop-types'\r\n// import Radio from '@material-ui/core/Radio';\r\n\r\nimport { SelectedIndex } from \"../globalData/SelectedIndex\";\r\n\r\n\r\n\r\nconst columns = [\r\n    { id: 'code', label: 'コード', minWidth: 70 },\r\n    { id: 'name', label: '名称', minWidth: 120 },\r\n];\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        maxHeight: 440,\r\n    },\r\n    tableHead: {\r\n        textAlign: 'left',\r\n    },\r\n});\r\n\r\n\r\n\r\n\r\n\r\nexport default function ModalTable(props) {\r\n    const classes = useStyles();\r\n\r\n    // const [selected, setSelected] = React.useState([]);\r\n    // const [selected_code, setSelected_code] = React.useState(null);\r\n    // const [selected_name, setSelected_name] = React.useState(null);\r\n\r\n    //参照テーブルで選択された列のデータをグローバルデータとして準備\r\n    const {\r\n        selected_codes,\r\n        selected_names,\r\n    } = useContext(SelectedIndex);\r\n    const [, setSelected_code] = selected_codes;\r\n    const [, setSelected_name] = selected_names;\r\n\r\n    const [old_row, set_old_row] = useState(\"undefined\")\r\n    const handleClick = (event) => {\r\n        //クリック選択行の背景色を変更\r\n        if (old_row === \"undefined\") {\r\n            event.target.parentNode.style.backgroundColor = \"#69D6BC\";\r\n            set_old_row(event.target.parentNode);\r\n        }\r\n        else {\r\n            console.log(\"handle.click\");\r\n            old_row.style.backgroundColor = \"inherit\";\r\n            event.target.parentNode.style.backgroundColor = \"#69D6BC\";\r\n            set_old_row(event.target.parentNode);\r\n        }\r\n        const code = event.target.parentNode.children[0].innerText\r\n        const _name = event.target.parentNode.children[1].innerText\r\n\r\n        //選択された列のデータをセット\r\n        setSelected_code(code);\r\n        setSelected_name(_name);\r\n\r\n        // setSelected_code(event.target.parentNode.children[0].innerText)\r\n        // setSelected_name(event.target.parentNode.children[1].innerText)\r\n        // old_row != null && old_row.style?.backgroundColor=\"inherit\";\r\n\r\n    }\r\n\r\n    // const [row_data, set_row_data] = useState(props.data);\r\n    const [row_data, set_row_data] = useState([{ name: \"\", code: \"\" }]);\r\n\r\n    useEffect(() => {\r\n        set_row_data([{ name: \"\", code: \"\" }])\r\n        set_row_data([{ name: \"\", code: \"\" }])\r\n        set_row_data(props.data);\r\n    }, [props])\r\n    return (\r\n        <Paper className={classes.container}>\r\n            <TableContainer className={classes.container}>\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {columns.map((column) => (\r\n                                <TableCell\r\n                                    key={column.id}\r\n                                    className={classes.tableHead}\r\n                                    style={{ minWidth: column.minWidth }}\r\n                                >\r\n                                    {column.label}\r\n                                </TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {row_data?.map((row, i) => (\r\n                            <TableRow\r\n                                className={\"null\"}\r\n                                hover\r\n                                onClick={event => handleClick(event, row.name)}\r\n                                onDoubleClick={e => { }}\r\n                                key={`${i}${row.name}`}\r\n                                style={{ width: \"100%\" }}\r\n                            >\r\n                                <TableCell align=\"left\" size='small' >{row.code}</TableCell>\r\n                                <TableCell align=\"left\" size='small'>{row.name}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Paper >\r\n    );\r\n}\r\nModalTable.defaultProps = {\r\n    data: [{ code: \"\", name: \"\" }],\r\n}\r\nModalTable.propTypes = {\r\n    data: PropTypes.array,\r\n}\r\n","import { createContext } from 'react';\r\n\r\n// this is the data obtained with 決定ボタン\r\nexport const DecidedIndex = createContext(null)\r\n","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n        '& > .background_blocker': {\r\n            zIndex: \"1400\",\r\n        }\r\n    },\r\n}));\r\n\r\nconst display_true = {\r\n    display: \"block\",\r\n    position: \"absolute\",\r\n    background: \"rgba(0,0,0,.7)\",\r\n    opacity: \".7\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    top: \"0\",\r\n    left: \"0\",\r\n}\r\n\r\nconst display_false = {\r\n    display: \"none\",\r\n    position: \"absolute\",\r\n    background: \"rgba(0,0,0,.7)\",\r\n    opacity: \".7\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    top: \"0\",\r\n    left: \"0\",\r\n}\r\n\r\nexport default function SnakbarComponent(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    // const handleClick = () => {\r\n    //     setOpen(true);\r\n    // };\r\n\r\n    const handleClose = (event, reason) => {\r\n        // set_toggle_background_blocker(\"block\")\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    // document.addEventListener('keydown', (e) => {\r\n    //     if (e.key === 'Escape') {\r\n    //         setOpen(false)\r\n    //     }\r\n    // })\r\n\r\n    return (\r\n        <div className={classes.root} onKeyDown={e => console.log('Key pressed')}>\r\n            <div className=\"background_blocker\"\r\n                style={open === true ? display_true : display_false}\r\n            ></div>\r\n            <Snackbar open={open} autoHideDuration={9999000} onClose={handleClose} style={{\r\n                bottom: 0,\r\n                top: \"50%\",\r\n                transform: \"translate(-50%, -50%)\",\r\n            }}>\r\n                <Alert onClose={handleClose} severity={props.severity}>\r\n                    {props.message}\r\n                </Alert>\r\n            </Snackbar>\r\n            {/* <Alert severity=\"error\">This is an error message!</Alert>\r\n            <Alert severity=\"success\">This is a success message!</Alert>\r\n            <Alert severity=\"warning\">This is a warning message!</Alert>\r\n            <Alert severity=\"info\">This is an information message!</Alert>\r\n            <Alert severity=\"success\">This is a success message!</Alert> */}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Modal, Button, TextField } from \"@material-ui/core\";\r\n\r\n// card imports\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n// icon\r\nimport { SearchIcon } from \"@material-ui/icons/Search\";\r\n\r\nimport ModalTable from \"./ModalTable\";\r\nimport { SelectedIndex } from \"../globalData/SelectedIndex\";\r\nimport { DecidedIndex } from \"../globalData/DecidedIndex\";\r\nimport SnakbarComponent from \"../comComponents/SnackbarComponent\";\r\nimport { render } from \"@testing-library/react\";\r\n\r\n// const IP = Object.values(require('os').networkInterfaces()).reduce((r, list) => r.concat(list.reduce((rr, i) => rr.concat(i.family === 'IPv4' && !i.internal && i.address || []), [])), [])[0];\r\n// const address = `http://${IP}:5000`\r\n// const address = \"http://localhost:5000\"\r\nconst address = \"http://192.168.24.131:5000\"\r\n// const address = \"http://192.168.11.56:5000\"\r\n\r\n// const address = \"http://172.24.162.210:5000\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 500,\r\n  },\r\n  media: {\r\n    height: 300,\r\n  },\r\n  paper: {\r\n    outline: \"transparent\",\r\n    position: \"absolute\",\r\n    width: 500,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid rgba(0,0,0,.8)\",\r\n    boxShadow: theme.shadows[5],\r\n    // padding: theme.spacing(2, 4, 3),\r\n  },\r\n  form: {\r\n    margin: \".5rem 0\",\r\n  },\r\n  formInput: {\r\n    marginRight: \".5rem\",\r\n    maxWidth: 180,\r\n    \"& label.Mui-focused\": {\r\n      color: \"#009879\",\r\n    },\r\n\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"#009879\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"#ff0000\",\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"#009879\",\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"#009879\",\r\n      },\r\n    },\r\n  },\r\n  cardButtons: {\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  fontBold: {\r\n    fontWeight: \"bold\",\r\n  }\r\n}));\r\n\r\n// modal position center\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst MaterialModal = ({ title, api_name }) => {\r\n  let [code, setCode] = useState(\"\");\r\n  let [name, setName] = useState(\"\");\r\n  let [search_btn, set_search_btn] = useState(false);\r\n  let [table_data, settable_data] = useState([{ name: \"\", code: \"\" }]);\r\n\r\n  //参照テーブルで選択された列のデータをModaltableから受け取る\r\n  const { selected_codes, selected_names } = useContext(SelectedIndex);\r\n  const [selected_code, setSelected_code] = selected_codes;\r\n  const [selected_name, setSelected_name] = selected_names;\r\n\r\n  //決定ボタンが押された列データをグローバルデータとして準備\r\n  const {\r\n    //to SeachForms.js\r\n    decided_codes_itm,\r\n    decided_names_itm,\r\n    decided_codes_loc,\r\n    decided_names_loc,\r\n    //to Details.js\r\n    decided_codes_in_loc,\r\n    decided_names_in_loc,\r\n    decided_codes_in_line,\r\n    decided_names_in_line,\r\n    //決定ボタンを押したことをフロント側に知らせるフラグ\r\n    decided_itm_flags,\r\n    decided_loc_flags,\r\n    decided_in_loc_flags,\r\n    decided_in_line_flags,\r\n  } = useContext(DecidedIndex);\r\n\r\n\r\n  const [, set_decided_code_itm] = decided_codes_itm;\r\n  const [, set_decided_name_itm] = decided_names_itm;\r\n  const [, set_decided_code_loc] = decided_codes_loc;\r\n  const [, set_decided_name_loc] = decided_names_loc;\r\n  const [, set_decided_code_in_loc] = decided_codes_in_loc;\r\n  const [, set_decided_name_in_loc] = decided_names_in_loc;\r\n  const [, set_decided_code_line] = decided_codes_in_line;\r\n  const [, set_decided_name_line] = decided_names_in_line;\r\n\r\n  const [, set_decided_itm_flag] = decided_itm_flags;\r\n  const [, set_decided_loc_flag] = decided_loc_flags;\r\n  const [decided_in_loc_flag, set_decided_in_loc_flag] = decided_in_loc_flags;\r\n  const [, set_decided_in_line_flag] = decided_in_line_flags;\r\n\r\n\r\n\r\n\r\n\r\n  async function get_modal_data(e) {\r\n    e.preventDefault();\r\n    set_search_btn(true);\r\n    const controller = new AbortController();\r\n    setTimeout(() => controller.abort(), 3000);\r\n    try {\r\n      // settable_data([{ name: \"\", code: \"\" }])\r\n      settable_data([]);\r\n      // replace % with %25\r\n      const regex = /[%]/gm;\r\n      const str = code;\r\n      const subst = `%25`;\r\n      const code_ = str.replace(regex, subst);\r\n\r\n      const get_url = `${address}/${api_name}/${code_ === \"\" ? null : code_}/${name === \"\" ? null : name\r\n        }`;\r\n      // setTimeout(() => {\r\n      //   controller.abort();\r\n      //   set_search_btn(false)\r\n      // }, 3000);\r\n      const response = await fetch(encodeURI(get_url), {\r\n        signal: controller.signal,\r\n      });\r\n      const raw = await response.json();\r\n\r\n      // .map is not a function bug fixed:\r\n      Array.isArray(raw) ? settable_data(raw) : settable_data([raw]);\r\n      // settable_data(await response.json());\r\n      console.log(\"table_data fetched=> \", table_data);\r\n      set_search_btn(false);\r\n    } catch (error) {\r\n      set_search_btn(false);\r\n      render(\r\n        <SnakbarComponent\r\n          message=\"データベースに接続できませんでした。\"\r\n          severity=\"warning\"\r\n        />\r\n      );\r\n      console.error(error);\r\n    }\r\n    set_search_btn(false);\r\n  }\r\n\r\n  const handle_kettei = () => {\r\n    if (selected_code === \"\" && selected_name === \"\" || selected_code === null && selected_name === null) {\r\n      return;\r\n    }\r\n\r\n    //決定された列データをセット\r\n    if (api_name === \"zairyou\") {\r\n      console.log(selected_code);\r\n      set_decided_code_itm(selected_code);\r\n      set_decided_name_itm(selected_name);\r\n      set_decided_itm_flag(true);\r\n      setOpen(false);\r\n      console.log(selected_name);\r\n    } else if (api_name === \"basho\") {\r\n      set_decided_code_loc(selected_code);\r\n      set_decided_name_loc(selected_name);\r\n      set_decided_loc_flag(true);\r\n      console.log(selected_name);\r\n      setOpen(false);\r\n    } else if (api_name === \"nyukobasho\") {\r\n      set_decided_code_in_loc(selected_code);\r\n      set_decided_name_in_loc(selected_name);\r\n      set_decided_in_loc_flag(true);\r\n      console.log(\"decided_in_loc_flag =>\", decided_in_loc_flag);\r\n      setOpen(false);\r\n    } else if (api_name === \"nyukoline\") {\r\n      set_decided_code_line(selected_code);\r\n      set_decided_name_line(selected_name);\r\n      set_decided_in_line_flag(true);\r\n      setOpen(false);\r\n    }\r\n    setSelected_code(\"\");\r\n    setSelected_name(\"\");\r\n  };\r\n\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = useState(getModalStyle);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    // get the opening name\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setSelected_code(\"\");\r\n    setSelected_name(\"\");\r\n    setOpen(false);\r\n  };\r\n\r\n  const body = (\r\n    <Card style={modalStyle} className={classes.paper}>\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\" align=\"center\">\r\n          {title}選択\r\n        </Typography>\r\n        <section>\r\n          <Typography gutterBottom variant=\"h6\" component=\"h1\">\r\n            検索条件\r\n          </Typography>\r\n          <form className={classes.form}>\r\n            <TextField\r\n              className={classes.formInput}\r\n              label=\"コード\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              autoFocus\r\n              value={code}\r\n              onChange={(e) => {\r\n                setCode(e.target.value);\r\n              }}\r\n            />\r\n            <TextField\r\n              className={classes.formInput}\r\n              label=\"名称\"\r\n              variant=\"outlined\"\r\n              value={name}\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n              }}\r\n              size=\"small\"\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              size=\"small\"\r\n              disabled={search_btn}\r\n              startIcon={SearchIcon}\r\n              onClick={get_modal_data}\r\n              color=\"primary\"\r\n            >\r\n              検索\r\n            </Button>\r\n          </form>\r\n        </section>\r\n        <section>\r\n          <ModalTable data={table_data} api_name={api_name} />\r\n        </section>\r\n      </CardContent>\r\n\r\n      <CardActions className={classes.cardButtons}>\r\n        <Button\r\n          size=\"large\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          className={classes.fontBold}\r\n          onClick={handle_kettei}\r\n        >\r\n          決定\r\n        </Button>\r\n        <Button\r\n          onClick={handleClose}\r\n          size=\"large\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          className={classes.fontBold}\r\n\r\n        >\r\n          キャンセル\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        tabIndex=\"-1\"\r\n        onClick={handleOpen}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n      >\r\n        参照\r\n      </Button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MaterialModal;\r\n","import { createContext } from 'react';\r\n\r\n\r\nexport const SakuseiPatternContext = createContext(null);","import { createContext } from 'react';\r\n\r\n// this is the data obtained with 検索 button\r\nexport const SearchDataContext = createContext(null)\r\n\r\n","import { useState, useEffect, useContext } from 'react';\r\nimport { Button, TextField, makeStyles } from '@material-ui/core';\r\nimport { Search } from '@material-ui/icons';\r\nimport \"./searchForm.css\"\r\nimport MaterialModal from \"../modals/MaterialModal.js\"\r\nimport SnakbarComponent from \"../comComponents/SnackbarComponent\";\r\nimport { SakuseiPatternContext } from \"../globalData/SakuseiPatternContext\";\r\nimport { SearchDataContext } from \"../globalData/SearchDataContext\";\r\nimport { DecidedIndex } from \"../globalData/DecidedIndex\";\r\nimport { render } from '@testing-library/react';\r\n// const IP = Object.values(require('os').networkInterfaces()).reduce((r, list) => r.concat(list.reduce((rr, i) => rr.concat(i.family==='IPv4' && !i.internal && i.address || []), [])), [])[0];\r\n// const address = `http://${IP}:5000`\r\n\r\n// const address = \"http://localhost:5000\"\r\nconst address = \"http://192.168.24.131:5000\"\r\n// const address = \"http://192.168.11.56:5000\"\r\n// const address = \"http://172.24.162.210:5000\"\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: \"2px 8px\",\r\n            width: 160,\r\n        },\r\n        '&. MuiButtonBase-root': {\r\n            align: 'center',\r\n        },\r\n        'input': {\r\n            padding: '6px 0 7px',\r\n        },\r\n        \"& label.Mui-focused\": {\r\n            color: \"#009879\"\r\n        },\r\n        \"& .MuiInput-underline:after\": {\r\n            borderBottomColor: \"#009879\"\r\n        },\r\n        \"& .MuiOutlinedInput-root\": {\r\n            \"& fieldset\": {\r\n                borderColor: \"#ff0000\"\r\n            },\r\n            \"&:hover fieldset\": {\r\n                borderColor: \"#009879\"\r\n            },\r\n            \"&.Mui-focused fieldset\": {\r\n                borderColor: \"#009879\"\r\n            }\r\n        },\r\n        // \"& .Mui-disabled.MuiInputBase-formControl.MuiInput-formControl\": {\r\n        //     width: '100% !important',\r\n        // }\r\n    },\r\n}));\r\n\r\n\r\nexport default function SearchForm() {\r\n\r\n    const { saku, saku_name } = useContext(SakuseiPatternContext);\r\n    const { search_data, set_search_data } = useContext(SearchDataContext);\r\n\r\n    //決定ボタンが押された列データを受け取る\r\n    const {\r\n        //材料\r\n        decided_codes_itm,\r\n        decided_names_itm,\r\n        decided_itm_flags,\r\n        //場所\r\n        decided_codes_loc,\r\n        decided_names_loc,\r\n        decided_loc_flags\r\n    } = useContext(DecidedIndex);\r\n    const [decided_code_itm] = decided_codes_itm;\r\n    const [decided_name_itm] = decided_names_itm;\r\n    const [decided_itm_flag, set_decided_itm_flag] = decided_itm_flags;\r\n\r\n    const [decided_code_loc] = decided_codes_loc;\r\n    const [decided_name_loc] = decided_names_loc;\r\n    const [decided_loc_flag, set_decided_loc_flag] = decided_loc_flags;\r\n\r\n\r\n    const [itm_cd, set_itm_cd] = useState('');\r\n    const [out_loc_cd, set_out_loc_cd] = useState('');\r\n    const [itm_name, set_item_name] = useState('');\r\n    const [loc_name, set_loc_name] = useState('');\r\n    const [seach_clicked, set_seach_clicked] = useState(false);\r\n\r\n    const [sakusei, set_sakusei] = saku;\r\n    const [sakusei_name, set_sakusei_name] = saku_name;\r\n\r\n    //モーダルで決定された列データを使用して表示\r\n    // 材料\r\n    useEffect(() => {\r\n        set_itm_cd(decided_code_itm);\r\n        set_item_name(decided_name_itm);\r\n        set_decided_itm_flag(false);\r\n        // document.getElementById('itm_cd_search').focus();\r\n\r\n    }, [decided_itm_flag])\r\n    // 場所\r\n    useEffect(() => {\r\n        set_out_loc_cd(decided_code_loc);\r\n        set_loc_name(decided_name_loc);\r\n        set_decided_loc_flag(false);\r\n        // document.getElementById('out_pl_cd_search').focus(); \r\n    }, [decided_loc_flag])\r\n\r\n    useEffect(() => {\r\n        const root_url = window.location.href;\r\n        let num = root_url.lastIndexOf('=');\r\n        const result = root_url.substr(num + 1, 1);\r\n\r\n        if (result === `2`) {\r\n            set_sakusei_name(\"入出庫の出庫\");\r\n            set_sakusei(2);\r\n            // \r\n        } else if (result === `3`) {\r\n            set_sakusei_name(\"在庫引落し\");\r\n            set_sakusei(3);\r\n        } else if (result === `4`) {\r\n            set_sakusei_name(\"入庫\");\r\n            set_sakusei(4);\r\n        }\r\n    }, [set_sakusei, set_sakusei_name]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const empty_err_chk = () => {\r\n        let ITM_empty_flg = false;\r\n        let LOC_empty_flg = false;\r\n\r\n        console.log(itm_cd, out_loc_cd);\r\n        if (itm_cd === \"\" && out_loc_cd === \"\") {\r\n            ITM_empty_flg = true;\r\n            LOC_empty_flg = true;\r\n        }\r\n        else if (itm_cd === \"\" && out_loc_cd !== \"\") {\r\n            ITM_empty_flg = true;\r\n        }\r\n        else if (itm_cd !== \"\" && out_loc_cd === \"\") {\r\n            LOC_empty_flg = true;\r\n        }\r\n        return [ITM_empty_flg, LOC_empty_flg];\r\n    }\r\n\r\n\r\n    const onSearch_Code = async (e) => {\r\n        // stops the page from refreshing\r\n        e.preventDefault();\r\n        set_seach_clicked(true)\r\n        set_search_data([])\r\n        document.activeElement.blur()//連続でエラーポップアップが出るのを防ぐため\r\n        const controller = new AbortController();\r\n        setTimeout(() => controller.abort(), 3000);//サーバーor DBへの接続失敗時、cacheへ\r\n        if (sakusei_name === '作成パターンが不正です') {\r\n            render(\r\n                // < SnakbarComponent message={data.message} severity=\"error\" />\r\n                < SnakbarComponent message=\"作成パターンが不正です。作成パターンを修正してください。\" severity=\"error\" />\r\n            )\r\n            // set_seach_clicked(true)\r\n            return;\r\n        }\r\n        const empty_err_flag = empty_err_chk();\r\n        console.log(empty_err_flag[0]);\r\n        console.log(empty_err_flag[1]);\r\n        if (empty_err_flag[0] === true && empty_err_flag[1] === true) {\r\n            set_seach_clicked(false)\r\n            return (\r\n                render(\r\n                    < SnakbarComponent message='材料コードが未入力です。場所コードが未入力です。' severity=\"error\" />\r\n                )\r\n            )\r\n        }\r\n        if (empty_err_flag[0] === true && empty_err_flag[1] === false) {\r\n            set_seach_clicked(false)\r\n            return (\r\n                render(\r\n                    < SnakbarComponent message=\"材料コードが未入力です。\" severity=\"error\" />\r\n                )\r\n            )\r\n        }\r\n        if (empty_err_flag[0] === false && empty_err_flag[1] === true) {\r\n            set_seach_clicked(false)\r\n            return (\r\n                render(\r\n                    < SnakbarComponent message=\"場所コードが未入力です。\" severity=\"error\" />\r\n                )\r\n            )\r\n        }\r\n        else {\r\n            try {\r\n                //console.log(body)\r\n\r\n                const get_url = `${address}/api/${encodeURI(itm_cd)}/${encodeURI(out_loc_cd)}`\r\n                const response = await fetch(get_url, { signal: controller.signal });\r\n                const data = await response.json();\r\n                console.log(data.result)\r\n                //検索成功\r\n                if (data.status === \"search_success\") {\r\n                    // // data.result.map(data.result[1].unit_qty.toLocalString());\r\n                    // console.log(data.result[1].unit_qty.toLocalString());\r\n                    set_search_data(data.result)\r\n                    console.log(\"NEW search data => \", search_data)\r\n                    console.log(\"loc_nm => \", data.names)\r\n                    // set_item_name(data.names[\"itm_nm\"]);\r\n                    // set_loc_name(data.names[\"loc_nm\"]);\r\n                    set_seach_clicked(false)\r\n                    return;\r\n                }\r\n                //検索結果が在庫に存在しない場合\r\n                else if (data[\"status\"] === \"search_fail\") {\r\n                    // set_item_name(data.names[\"itm_nm\"]);\r\n                    // set_loc_name(data.names[\"loc_nm\"]);\r\n                    set_seach_clicked(false)\r\n                    return (\r\n                        render(\r\n                            // < SnakbarComponent message={data.message} severity=\"error\" />\r\n                            < SnakbarComponent message=\"検索した条件は在庫に存在しません。\" severity=\"error\" />\r\n                        )\r\n                    )\r\n                }\r\n                //コードの不正による失敗時\r\n                else {\r\n                    console.log(\"コードが不正\")\r\n                    // set_item_name(data.names[\"itm_nm\"]);\r\n                    // set_loc_name(data.names[\"loc_nm\"]);\r\n                    console.log(\"data\", data[\"item\"]);\r\n                    console.log(\"data\", data[\"location\"]);\r\n                    if (data[\"item\"].length === 0) {\r\n\r\n                        if (data[\"location\"].length === 0) {\r\n                            set_seach_clicked(false)\r\n                            return (\r\n                                render(\r\n                                    // < SnakbarComponent message={data.message} severity=\"error\" />\r\n                                    < SnakbarComponent message=\"材料コードと場所コードが不正です。\" severity=\"error\" />\r\n                                )\r\n                            )\r\n                        }\r\n                        set_seach_clicked(false)\r\n                        return (\r\n                            render(\r\n                                // < SnakbarComponent message={data.message} severity=\"error\" />\r\n                                < SnakbarComponent message=\"材料コードが不正です。\" severity=\"error\" />\r\n                            )\r\n                        )\r\n                    }\r\n                    else if (data[\"location\"].length === 0) {\r\n                        set_seach_clicked(false)\r\n                        return (\r\n                            render(\r\n                                // < SnakbarComponent message={data.message} severity=\"error\" />\r\n                                < SnakbarComponent message=\"場所コードが不正です。\" severity=\"error\" />\r\n                            )\r\n                        )\r\n\r\n                    }\r\n                }\r\n\r\n            } catch (err) {\r\n                console.log(err)\r\n                console.log(err.name)\r\n                console.log(err.name === 'TypeError')\r\n                set_seach_clicked(false)\r\n                // TODO error when incorrect code is inserted basho code %\r\n                return (\r\n                    render(\r\n                        < SnakbarComponent message=\"データベースに接続ができませんでした。\" severity=\"warning\" />//サーバ接続失敗\r\n                    )\r\n                )\r\n            }\r\n        }\r\n\r\n        set_seach_clicked(false)\r\n\r\n\r\n    }\r\n\r\n\r\n    //材料コードををfocusoutした時\r\n    const focusout_zairyo = async (e) => {\r\n        console.log(\"zairyofocusout\");\r\n        try {\r\n            // 材料コードの有無を材料マスタで検索、材料名称を表示する。\r\n            const code_ = e.target.value;\r\n            const get_url = `${address}/zairyoName/${code_ === \"\" ? null : code_}`;\r\n            const response = await fetch(encodeURI(get_url));\r\n            console.log(response);\r\n            const res = await response.json();\r\n            console.log(res);\r\n            res.length === 1 && set_item_name(res[0].ITM_NM);\r\n        } catch (error) {\r\n            console.log(error);\r\n            // render(< SnakbarComponent message={`データベースに接続できませんでした。`} severity=\"warning\" />)\r\n        }\r\n\r\n    };\r\n\r\n    //場所コードををfocusoutした時\r\n    const focusout_basho = async (e) => {\r\n        // if (e.key === \"Tab\") {\r\n        // set_loc_name(\"\");\r\n\r\n        try {\r\n            // 場所コードの有無を場所マスタで検索、場所名称を表示する。\r\n            const code_ = e.target.value;\r\n            const get_url = `${address}/bashoName/${code_ === \"\" ? null : code_\r\n                }`;\r\n            const response = await fetch(encodeURI(get_url));\r\n            const res = await response.json();\r\n            // log(res);\r\n            res.length === 1 && set_loc_name(res[0].LOC_NM);\r\n        } catch (error) {\r\n            console.log(error);\r\n            // render(< SnakbarComponent message={`データベースに接続できませんでした。`} severity=\"warning\" />)\r\n        }\r\n        // }\r\n    };\r\n\r\n\r\n    const saku_handler = (e) => {\r\n        // set_sakusei('')\r\n        const saku_data = {\r\n            \"1\": \"出庫と在庫引落し\",\r\n            \"2\": \"入出庫の出庫\",\r\n            \"3\": \"在庫引落し\",\r\n            \"4\": \"入庫\",\r\n            \"5\": \"作成パターンが不正です\"\r\n        }\r\n        const inputValue = Number(e.target.value);\r\n\r\n        if (e.target.value === \"\") {\r\n            set_sakusei('')\r\n            set_sakusei_name(saku_data[5])\r\n            // set_sakusei_name(\"\")\r\n        } else if (e.target.value > 4 || e.target.value < 1) {\r\n            e.target.value = inputValue;\r\n            set_sakusei(e.target.value)\r\n            set_sakusei_name(saku_data[5])\r\n        }\r\n        else {\r\n            e.target.value = inputValue;\r\n            set_sakusei(e.target.value)\r\n            set_sakusei_name(saku_data[e.target.value])\r\n        }\r\n        seach_clicked === true && set_seach_clicked(false);\r\n        // // console.log(sakusei, sakusei_name)\r\n    }\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <section id=\"search_form\" className={classes.root} >\r\n            <form method=\"GET\"  >\r\n                <div id=\"search-contents\">\r\n                    <section className=\"prep_pattern_code\">\r\n                        <TextField\r\n                            id=\"saku_kbn_search\"\r\n                            label=\"作成パターン(初期値)\"\r\n                            tabIndex={-1}\r\n                            value={sakusei}\r\n                            onKeyDown={(e) => {\r\n                                const invalidChars = [\r\n                                    \"-\",\r\n                                    \"+\",\r\n                                    \"e\",\r\n                                    \".\",\r\n                                ]\r\n                                if (invalidChars.includes(e.key)) e.preventDefault();\r\n                            }}\r\n                            onChange={saku_handler}\r\n                            type=\"number\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            InputProps={{ inputProps: { min: 1, max: 4 } }}\r\n                        />\r\n                        <TextField disabled\r\n                            className=\"saku_kbn_search_name\"\r\n                            id=\"sakusei_name\"\r\n                            label=\"作成パターン名\"\r\n                            value={sakusei_name}\r\n                            style={{ width: '70%' }}\r\n                            variant=\"standard\"\r\n                            size=\"small\"\r\n                        />\r\n                    </section>\r\n                    <section className=\"material_code\">\r\n                        <div className=\"div\">\r\n                            <TextField\r\n                                id=\"itm_cd_search\"\r\n                                label=\"材料コード\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                autoFocus\r\n                                required\r\n                                type=\"text\"\r\n                                value={itm_cd}\r\n                                onBlur={focusout_zairyo}\r\n                                onChange={event => {\r\n                                    set_itm_cd(event.target.value);\r\n                                    set_item_name(\"\")\r\n                                }}\r\n                                // onBlur={}\r\n                                className={classes.margin}\r\n                            />\r\n                            <MaterialModal title=\"材料コード\" api_name=\"zairyou\" />\r\n                        </div>\r\n                        <TextField disabled\r\n                            id=\"itm_cd_name\"\r\n                            label=\"材料名称\"\r\n                            style={{ width: '65%' }}\r\n                            value={itm_name}\r\n                            size=\"small\"\r\n                        />\r\n                    </section>\r\n\r\n                </div>\r\n                <div id=\"search\">\r\n                    <div className=\"sakusei_basho\">\r\n\r\n                        <section className=\"sakusei_info\">\r\n                            <p>1:出庫と在庫引落し&nbsp;&nbsp;&nbsp;&nbsp;2:入出庫の出庫&nbsp;&nbsp;&nbsp;&nbsp;3:在庫引落し&nbsp;&nbsp;&nbsp;&nbsp;4:入庫</p>\r\n                        </section>\r\n\r\n                        <section className=\"place_code\">\r\n                            <div className=\"div\">\r\n                                <TextField\r\n                                    id=\"out_pl_cd_search\"\r\n                                    label=\"場所コード\"\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    required\r\n                                    type=\"text\"\r\n                                    value={out_loc_cd}\r\n                                    onBlur={focusout_basho}\r\n                                    onChange={event => {\r\n                                        set_out_loc_cd(event.target.value);\r\n                                        set_loc_name(\"\");\r\n                                    }}\r\n                                // onBlur={}\r\n                                />\r\n                                <MaterialModal title=\"場所コード\" api_name=\"basho\" />\r\n                            </div>\r\n                            <TextField disabled\r\n                                id=\"out_pl_cd_search_name\"\r\n                                label=\"場所名称\"\r\n                                style={{ width: '100%' }}\r\n                                value={loc_name}\r\n                                size=\"small\"\r\n                            />\r\n\r\n                        </section>\r\n                    </div>\r\n                    <div className=\"seach_btn_div\">\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            size=\"large\"\r\n                            color=\"primary\"\r\n                            disabled={seach_clicked}\r\n                            onClick={onSearch_Code}\r\n                            startIcon={<Search />}\r\n                            type=\"submit\"\r\n\r\n                        >検索</Button>\r\n                    </div>\r\n                </div>\r\n            </form >\r\n            <hr />\r\n        </section >\r\n    )\r\n}\r\n","import { createContext } from 'react';\r\n\r\n// this is the data obtained with confirm in details changed dialog\r\nexport const Details_changed_flg = createContext(null)\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { useTable } from \"react-table\";\r\nimport { SearchDataContext } from \"../../globalData/SearchDataContext\";\r\nimport { SelectedIndex } from \"../../globalData/SelectedIndex\";\r\n\r\nimport { Details_changed_flg } from \"../../globalData/Details_changed_flg\";\r\n\r\nfunction DynTable() {\r\n    const { search_data } = useContext(SearchDataContext);\r\n    const { idx } = useContext(SelectedIndex);\r\n    const { details } = useContext(Details_changed_flg);\r\n    const [, set_selected_index] = idx;\r\n\r\n\r\n    const [details_changed_flag, set_details_changed_flag] = details;\r\n    const radio_check = <input\r\n        type=\"radio\"\r\n        name=\"reflection_check\"\r\n        id=\"reflection_check\"\r\n        onChange={e => {\r\n            console.log(e)\r\n            // console.log(\"onChangeの時ID \" + e.target.parentNode.parentNode.id)\r\n            //反映チェック変更時に詳細内容が変更されているかどうか\r\n            if (details_changed_flag === true) {\r\n\r\n                if (window.confirm('入力内容を破棄します。よろしいですか？')) {\r\n                    set_details_changed_flag(false);\r\n                    set_selected_index(e.target.parentNode.parentNode.id);\r\n                    e.target.checked = true//ラジオボタンを確定\r\n                    // console.log('OK clicked,' + e.target.checked)\r\n                    return;\r\n                } else {\r\n                    e.preventDefault();//反映チェックラジオボタン(見た目)が動かないようにする\r\n                    e.target.checked = false;//ラジオボタンの選択が動かないようにする\r\n                    set_details_changed_flag(true);\r\n                    // console.log('cancelled. clicked row index=> ', e.target.parentNode.parentNode.id);\r\n                    return;\r\n                }\r\n            } else set_selected_index(e.target.parentNode.parentNode.id);\r\n        }}\r\n    />\r\n\r\n    const [table_data, set_table_data] = useState(search_data);\r\n    useEffect(() => {\r\n        console.log(search_data);\r\n        // console.log(search_data.map(obj => obj.unit_qty));\r\n        // console.log(search_data.map(obj => console.log(obj.unit_qty)));\r\n        // search_data.map(search_data.unit_qty.toLocaleString())\r\n        set_selected_index(null)\r\n        // const search_data = [\r\n        //     {\r\n        //          'an': 'asasa',\r\n        //          'asas': 'asas',\r\n        //          'unit_qty': 12121131,\r\n        //     },\r\n        //     {\r\n        //          'an': 'asasa',\r\n        //          'asas': 'asas',\r\n        //          'unit_qty': 12121131,\r\n        //     },\r\n        //     {\r\n        //          'an': 'asasa',\r\n        //          'asas': 'asas',\r\n        //          'unit_qty': 12121131,\r\n        //     },\r\n        // ]\r\n\r\n\r\n        // change number(11878212) to localString(11,878,212)\r\n        set_table_data(search_data.map(e=>{\r\n            const unit_qty = e.unit_qty.toLocaleString();\r\n            return {...e, unit_qty};\r\n        }))\r\n        // return () => {\r\n        //     cleanup\r\n        // }\r\n    }, [search_data])\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: \"場所ｺｰﾄﾞ\",\r\n                accessor: \"out_loc_cd\",\r\n            },\r\n            {\r\n                Header: \"場所名称\",\r\n                accessor: \"out_loc_name\",\r\n            },\r\n            {\r\n                Header: \"在庫数\",\r\n                accessor: \"unit_qty\",\r\n            },\r\n            {\r\n                Header: \"ﾛｯﾄNo\",\r\n                accessor: \"lot_no\",\r\n            },\r\n            {\r\n                Header: \"ｻﾌﾞﾛｯﾄNo\",\r\n                accessor: \"sub_lot_no\",\r\n            },\r\n            {\r\n                Header: \"棚･ﾗｲﾝｺｰﾄﾞ\",\r\n                accessor: \"out_line_cd\",\r\n            },\r\n            {\r\n                Header: \"棚･ﾗｲﾝ名称\",\r\n                accessor: \"out_line_name\",\r\n            },\r\n            {\r\n                Header: \"反映CHK\",\r\n                accessor: \"radio_check\",\r\n            },\r\n        ],\r\n        []\r\n    )\r\n\r\n    const tableInstance = useTable({ columns, data: table_data })\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n    } = tableInstance\r\n    // console.log(tableInstance)\r\n    // console.log(\"table_data:\")\r\n    // console.log(table_data)\r\n    // console.log(\"data:\")\r\n    // console.log(data)\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"tb_container\">\r\n            < table id=\"stock_table\" {...getTableProps()}>\r\n                <thead>\r\n                    {//loop over the header rows\r\n                        headerGroups.map(headerGroup => (\r\n                            // apply the header row props\r\n                            <tr className=\"table100-head\" {...headerGroup.getHeaderGroupProps()}>\r\n                                {//loop over headers in each row\r\n                                    headerGroup.headers.map(column => (\r\n                                        // apply the header cell groups\r\n                                        <th className={column.id} key={`th_${column.id}`} {...column.getHeaderProps}>\r\n                                            {/* render the headeer */}\r\n                                            {column.render(\"Header\")}\r\n                                        </th>\r\n                                    ))\r\n                                }\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </thead>\r\n                {/* apply the table body props */}\r\n                <tbody {...getTableBodyProps()}>\r\n                    {/* loop over the table rows */}\r\n                    {rows.map(row => {\r\n                        // prepare the row for display\r\n                        prepareRow(row)\r\n                        return (\r\n                            // apply the row groups\r\n                            <tr id={row.id} {...row.getRowProps()}>\r\n                                {/* loop over the rows cells */}\r\n                                {row.cells.map(cell => {\r\n                                    // apply the cell props\r\n                                    return (\r\n                                        <td className={cell.column.id} {...cell.getCellProps()}>\r\n                                            {cell.column.id === 'radio_check' ? radio_check : cell.render('Cell')}\r\n                                            {/* {cell.render('Cell')} */}\r\n                                        </td>\r\n                                    )\r\n                                })}\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table >\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport { DynTable }","// import {useState} from 'react'\r\nimport \"./stockInfo.css\";\r\nimport {DynTable} from \"./table/DynTable\";\r\n// import { InfiniteScroll } from \"./table/InfiniteScroll\";\r\n\r\nconst StockInfo = () => {\r\n    return (\r\n        <section id=\"stock_info\" className=\"main_content\">\r\n            <h3 id=\"stock_title\">在庫情報</h3>\r\n            <DynTable/>\r\n            {/* <InfiniteScroll /> */}\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default StockInfo;","import React, { useState, useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport { Button, TextField, makeStyles } from \"@material-ui/core\";\r\nimport MaterialModal from \"../modals/MaterialModal.js\";\r\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\r\nimport \"./details.css\";\r\nimport SnakbarComponent from \"../comComponents/SnackbarComponent\";\r\n// import SakuPtn from \"../comComponents/SakuPtn\";\r\nimport { render } from \"@testing-library/react\";\r\nimport { SakuseiPatternContext } from \"../globalData/SakuseiPatternContext\";\r\nimport { SearchDataContext } from \"../globalData/SearchDataContext\";\r\nimport { SelectedIndex } from \"../globalData/SelectedIndex\";\r\nimport { DecidedIndex } from \"../globalData/DecidedIndex\";\r\nimport { Details_changed_flg } from \"../globalData/Details_changed_flg\";\r\n\r\n// import InputLabel from '@material-ui/core/InputLabel';\r\n// import MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n// import Select from '@material-ui/core/Select';\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nconst { log, error } = console;\r\n// const IP = Object.values(require('os').networkInterfaces()).reduce((r, list) => r.concat(list.reduce((rr, i) => rr.concat(i.family==='IPv4' && !i.internal && i.address || []), [])), [])[0];\r\n// const address = `http://${IP}:5000`\r\n// const address = \"http://localhost:5000\";\r\nconst address = \"http://192.168.24.131:5000\"\r\n// const address = \"http://192.168.11.56:5000\"\r\n\r\n// const address = \"http://172.24.162.210:5000\"\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: \"2px 8px\",\r\n      width: 160,\r\n    },\r\n    \"&. MuiButtonBase-root\": {\r\n      align: \"center\",\r\n    },\r\n    input: {\r\n      padding: \"6px 0 7px\",\r\n    },\r\n    \"& label.Mui-focused\": {\r\n      color: \"#009879\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"#009879\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"#ff0000\",\r\n        borderWidth: \"2px\",\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"#009879\",\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"#009879\",\r\n      },\r\n    },\r\n    \"& .customInput\": {\r\n      \"& .MuiInput-underline:before\": {\r\n        borderBottomColor: \"#ff0000\",\r\n        borderBottomWidth: 2,\r\n      },\r\n    },\r\n\r\n    \"& ..MuiAutocomplete-popper\": {\r\n      fontSize: \".8rem\",\r\n    },\r\n    \"& .add_margin_70\": {\r\n      marginLeft: \"70px !important\",\r\n    },\r\n  },\r\n  autocom: {\r\n    padding: \"1px\",\r\n    \"& .MuiFormControl-root.MuiTextField-root.MuiFormControl-fullWidth\": {\r\n      width: \"300px\",\r\n    },\r\n  },\r\n  option: {\r\n    fontSize: 12,\r\n  },\r\n  input: {\r\n    fontSize: \"12px !important\",\r\n  },\r\n  inputRoot: {\r\n    '&[class*=\"MuiOutlinedInput-root\"][class*=\"MuiOutlinedInput-marginDense\"]': {\r\n      padding: 2,\r\n    },\r\n  },\r\n}));\r\n\r\n// eslint-disable-next-line no-extend-native\r\nDate.prototype.isValid = function () {\r\n  // If the date object is invalid it\r\n  // will return 'NaN' on getTime()\r\n  // and NaN is never equal to itself.\r\n  // eslint-disable-next-line no-self-compare\r\n  return this.getTime() === this.getTime();\r\n};\r\n\r\nconst Details = () => {\r\n  // const nyukoRef = useRef(null);\r\n  // const unit_qtyRef = useRef(null);\r\n  const { saku, saku_name } = useContext(SakuseiPatternContext);\r\n  const { search_data, set_search_data } = useContext(SearchDataContext);\r\n  const { idx } = useContext(SelectedIndex);\r\n\r\n  const { details } = useContext(Details_changed_flg);\r\n  //詳細内容のいずれかが入力変更されたときのflag\r\n  const [details_changed_flag, set_details_changed_flag] = details;\r\n\r\n  //参照内で決定ボタンが押された列データを受け取る\r\n  const {\r\n    //入庫場所\r\n    decided_codes_in_loc,\r\n    decided_names_in_loc,\r\n    decided_in_loc_flags,\r\n    //入庫ライン\r\n    decided_codes_in_line,\r\n    decided_names_in_line,\r\n    decided_in_line_flags,\r\n  } = useContext(DecidedIndex);\r\n  const [selected_index, set_selected_index] = idx;\r\n  const [decided_code_in_loc] = decided_codes_in_loc;\r\n  const [decided_name_in_loc] = decided_names_in_loc;\r\n  const [decided_in_loc_flag, set_decided_in_loc_flag] = decided_in_loc_flags;\r\n\r\n  const [decided_code_in_line] = decided_codes_in_line;\r\n  const [decided_name_in_line] = decided_names_in_line;\r\n  const [decided_in_line_flag, set_decided_in_line_flag] = decided_in_line_flags\r\n\r\n\r\n  // log(decided_code_in_loc);\r\n  const classes = useStyles();\r\n\r\n  // use state for postgre items\r\n  const [itm_cd, set_item_cd] = useState(\"\");\r\n  const [out_pl_cd, set_out_pl_cd] = useState(\"\");\r\n  const [out_pl_cd_name, set_out_pl_cd_name] = useState(\"\");\r\n  const [out_line_cd, set_out_line_cd] = useState(\"\");\r\n  const [out_line_cd_name, set_out_line_cd_name] = useState(\"\");\r\n  const [in_pl_cd, set_in_pl_cd] = useState(\"\");\r\n  const [in_pl_cd_name, set_in_pl_cd_name] = useState(\"\");\r\n\r\n  const [in_line_cd, set_in_line_cd] = useState('');\r\n  const [in_line_cd_name, set_in_line_cd_name] = useState(\"\");\r\n\r\n  const [unit_qty, set_unit_qty] = useState(\"\");\r\n  const [max_unit_qty, set_max_unit_qty] = useState(\"\");\r\n  const [unit_cd, set_unit_cd] = useState(\"\");\r\n  const [lot_no, set_lot_no] = useState(\" \");\r\n\r\n  const [sub_lot_no, set_sub_lot_no] = useState(\" \");\r\n  const [usr_cd, set_usr_cd] = useState(\"\");\r\n  const [usr_cd_name, set_usr_cd_name] = useState(\" \");\r\n  const [act_dt, set_act_dt] = useState(new Date().toISOString().slice(0, 10));\r\n  const [ac_dt, set_ac_dt] = useState(new Date().toISOString().slice(0, 10));\r\n  const [inst_no, set_inst_no] = useState(\"\");\r\n\r\n  // const [inst_no, set_inst_no] = useState({code: \"\", name: \"\"});\r\n  const [sakuzu_data, set_sakuzu_data] = useState([{ code: \"エラー\", name: \"データの取得ができませんでした。\" }, { code: \"原因\", name: \"ソフト起動時にサーバーに接続できなかった。\" }, { code: \"対応方法A\", name: \"ブラウザを更新する。\" }, { code: \"対応方法B\", name: \"サーバーを再起動し、ブラウザを更新する。\" }]);\r\n  const [sakuzu_temp, set_sakuzu_temp] = useState(null);\r\n\r\n  // const [sakusei] = saku;\r\n  const [sakusei, set_sakusei] = saku;\r\n  const [sakusei_name, set_sakusei_name] = saku_name;\r\n  const [submitRefClicked, set_submitRefClicked] = useState(false);\r\n\r\n  //エラー箇所をpushしていく配列\r\n  let error_messages = [];\r\n\r\n  useMemo(() => {\r\n    const grab_inst_no_data = async () => {\r\n      try {\r\n        const url = `${address}/inst`;\r\n        const response = await fetch(url);\r\n        const result = await response.json();\r\n\r\n        // TODO get staff name\r\n        log(result);\r\n        set_sakuzu_data(result);\r\n        // TODO: Gotta get the result and assign the staff name\r\n        // set_usr_cd_name(result.name)\r\n      } catch (error) {\r\n        log(error);\r\n        // render(< SnakbarComponent message={`データベースに接続できませんでした。`} severity=\"warning\" />)\r\n      }\r\n    };\r\n    grab_inst_no_data();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"search_data changed\");\r\n    console.log(\"selected_index-> \", selected_index);\r\n    //検索ボタンが押されたとき\r\n    if (selected_index === null) {\r\n      set_details_changed_flag(false);\r\n      log(\"null search button clicked\");\r\n      set_in_pl_cd(\"\");\r\n      set_in_pl_cd_name(\"\");\r\n      set_in_line_cd(\"\");\r\n      set_in_line_cd_name(\"\");\r\n      set_unit_qty(\"\");\r\n      set_act_dt(new Date().toISOString().slice(0, 10));\r\n      set_ac_dt(new Date().toISOString().slice(0, 10));\r\n      set_sakuzu_temp(null);\r\n      set_item_cd(\"\");\r\n      set_out_line_cd(\"\");\r\n      set_out_line_cd_name(\"\");\r\n      set_out_pl_cd(\"\");\r\n      set_out_pl_cd_name(\"\");\r\n      set_unit_cd(\"\");\r\n      // set_inst_no(\"\");\r\n      // set_usr_cd(\"\");\r\n      set_lot_no(\" \");\r\n      set_sub_lot_no(\" \");\r\n    } else {\r\n      // log(search_data)\r\n      //反映チェックの変更時\r\n      //反映チェック変更時に影響を受ける部分以外の入力内容をリセット\r\n      set_in_pl_cd(\"\");\r\n      set_in_pl_cd_name(\"\");\r\n      set_in_line_cd(\"\");\r\n      set_in_line_cd_name(\"\");\r\n      set_unit_qty(\"\");\r\n      set_act_dt(new Date().toISOString().slice(0, 10));\r\n      set_ac_dt(new Date().toISOString().slice(0, 10));\r\n      set_sakuzu_temp(null);\r\n\r\n      //反映チェック変更時に詳細情報に反映\r\n      set_item_cd(search_data[selected_index]?.itm_cd);\r\n      set_out_line_cd(search_data[selected_index]?.out_line_cd);\r\n      set_out_line_cd_name(search_data[selected_index]?.out_line_name);\r\n      set_out_pl_cd(search_data[selected_index]?.out_loc_cd);\r\n      set_out_pl_cd_name(search_data[selected_index]?.out_loc_name);\r\n      set_unit_cd(search_data[selected_index]?.unit_cd);\r\n      // set_inst_no(search_data[selected_index]?.inst_no)\r\n      // set_usr_cd(search_data[selected_index]?.usr_cd)\r\n      set_lot_no(search_data[selected_index]?.lot_no);\r\n      set_sub_lot_no(search_data[selected_index]?.sub_lot_no);\r\n\r\n      set_max_unit_qty(search_data[selected_index]?.unit_qty); //入力可能な最大数量\r\n      //反映チェック変更時に入庫場所コードにフォーカス\r\n      // document.getElementById('in_pl_cd').focus();\r\n    }\r\n  }, [search_data, selected_index]);\r\n\r\n  //参照で決定された列データをセット\r\n  //入庫場所\r\n  useEffect(() => {\r\n    console.log(decided_in_loc_flag);\r\n    set_in_pl_cd(decided_code_in_loc);\r\n    set_in_pl_cd_name(decided_name_in_loc);\r\n    set_decided_in_loc_flag(false)\r\n    console.log(decided_in_loc_flag);\r\n  }, [decided_in_loc_flag]);\r\n  // 入庫棚・ラインコード\r\n  useEffect(() => {\r\n    set_in_line_cd(decided_code_in_line);\r\n    set_in_line_cd_name(decided_name_in_line);\r\n    set_decided_in_line_flag(false)\r\n  }, [decided_in_line_flag]);\r\n\r\n  const reset_usr_cd = () => {\r\n    log(\"resetting usr_cd\");\r\n    set_usr_cd(\"\");\r\n    set_usr_cd_name(\"人員コードが不正です。\");\r\n  };\r\n\r\n  const handle_staff_input = async () => {\r\n    log(\"handle_staff_input\");\r\n    if (usr_cd === undefined || usr_cd === \"\") {\r\n      reset_usr_cd();\r\n      return;\r\n    }\r\n    try {\r\n      const url = `${address}/staff/${encodeURI(usr_cd)}`;\r\n      const response = await fetch(url);\r\n      const result = await response.json();\r\n      result.length === 1\r\n        ? set_usr_cd_name(result[0].USR_NM)\r\n        : set_usr_cd_name(\"人員コードが不正です。\");\r\n    } catch (error) {\r\n      log(\"Staff INPUT has error=> \", error);\r\n\r\n      // reset_usr_cd();\r\n      // render(< SnakbarComponent message={`データベースに接続できませんでした。`} severity=\"warning\" />)\r\n    }\r\n    // set_submitRefClicked(false);\r\n  };\r\n\r\n\r\n  //入庫場所コードををfocusoutした時\r\n  const focusout_nyuko_basho = async (e) => {\r\n    // if (e.key === \"Tab\") {\r\n    set_in_pl_cd_name(\"\");\r\n    set_in_line_cd(\"\");\r\n    set_in_line_cd_name(\"\");\r\n    try {\r\n      // 入庫場所コードの有無を場所マスタで検索、場所名称を表示する。\r\n      const code_ = e.target.value;\r\n      const get_url = `${address}/bashoName/${code_ === \"\" ? null : code_\r\n        }`;\r\n      const response = await fetch(encodeURI(get_url));\r\n      const res = await response.json();\r\n      log(res);\r\n      res.length === 1 && set_in_pl_cd_name(res[0].LOC_NM);\r\n    } catch (error) {\r\n      log(error);\r\n      // render(< SnakbarComponent message={`データベースに接続できませんでした。`} severity=\"warning\" />)\r\n    }\r\n    // }\r\n  };\r\n  const focusin_nyuko_line = async (e) => {\r\n    try {\r\n      // 入庫場所コードを棚ラインマスタで検索、入庫棚ラインコードの有無を表示\r\n      const get_url2 = `${address}/on_nyukoline/${encodeURI(in_pl_cd)}`;\r\n      if (!in_pl_cd) { return; };\r\n\r\n      const response2 = await fetch(get_url2);\r\n      const res2 = await response2.json();\r\n      console.log(res2)\r\n      // if (res2.length === 0 && in_pl_cd_name !== \"\") {\r\n      if (res2.length === 0) {\r\n        set_in_line_cd(\"-\");\r\n        set_in_line_cd_name(\"設定しない\");\r\n        document.getElementById(\"unit_qty\").focus(); //数量にフォーカス\r\n      }\r\n    } catch (error) {\r\n      log(error);\r\n      // render(< SnakbarComponent message={`データベースに接続できませんでした。`} severity=\"warning\" />)\r\n    }\r\n  };\r\n\r\n  //入庫棚・ラインコードfocusout、棚ライン名称を検索、表示\r\n  const focusout_nyuko_line = async () => {\r\n    // if (e.key === \"Tab\") {\r\n    try {\r\n      const code_ = encodeURI(in_line_cd);\r\n      const get_url = `${address}/nyukolineName/${code_ === \"\" ? null : code_}`;\r\n      const response = await fetch(get_url);\r\n      const res = await response.json();\r\n      // console.log(res);\r\n      res.length === 1 && set_in_line_cd_name(res[0].STR_LN_NM);\r\n    } catch (error) {\r\n      console.log(error);\r\n      // render(< SnakbarComponent message={`データベースに接続できませんでした。`} severity=\"warning\" />)\r\n    }\r\n    // }\r\n  };\r\n\r\n  // unit_qtyが変わった時に呼ばれる\r\n  const handle_unit_qty = (e) => {\r\n    const value = e.target.value.replaceAll(',', '');\r\n    if (Number(value) === 0) {\r\n      set_unit_qty('');\r\n    } else {\r\n      const formatter = new Intl.NumberFormat('en')\r\n      // もし入力の数量がテーブルのunit_qtyより多かったら、 エラーを出す：'在庫数より入力値が上回っています。'\r\n      // e.target.value <= search_data[selected_index]?.unit_qty ? set_unit_qty(e.target.value) : set_unit_qty(0);\r\n      const val = formatter.format(value);\r\n      // console.log(value.toLocalString())\r\n      console.log(typeof (value))\r\n      // log(val, typeof (val))\r\n      // if (val > search_data[selected_index]?.unit_qty) {\r\n      if (Number(value) > search_data[selected_index]?.unit_qty) {\r\n        set_unit_qty(val);\r\n        // value = Number(val).toLocaleString()\r\n        e.target.blur();\r\n        render(\r\n          <SnakbarComponent\r\n            message=\"在庫数を超える数量が入力されました。数量を変更して下さい。\"\r\n            severity=\"error\"\r\n          />\r\n        );\r\n        return;\r\n      } else {\r\n        set_unit_qty(val);\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  /* ###################  MASTER ERROR CHECK ENDPOINT ################ */\r\n\r\n  // 1. 出庫場所コードまたは入庫場所コードが場所マスタに存在しない場合のエラー\r\n  const check1 = async () => {\r\n    const controller = new AbortController();\r\n    setTimeout(() => controller.abort(), 4000);\r\n    if (!out_pl_cd || !in_pl_cd || !out_pl_cd) {\r\n      if (Number(sakusei) !== 3) {\r\n        !out_pl_cd && error_messages.push(\"出庫場所コードが不正です。\");\r\n        !in_pl_cd && error_messages.push(\"入庫場所コードが不正です。\");\r\n        return;\r\n      } else {\r\n        !out_pl_cd && error_messages.push(\"出庫場所コードが不正です。\");\r\n      }\r\n    }\r\n    try {\r\n      const get_url = `${address}/check/one/${encodeURI(out_pl_cd)}/${in_pl_cd !== \"\" ? encodeURI(in_pl_cd) : null\r\n        }`;\r\n      // const get_url = `${address}/check/one/${encodeURI(out_pl_cd)}/${null}}`\r\n      const response = await fetch(get_url, { signal: controller.signal });\r\n      log(response.status);\r\n      log(response);\r\n      const res = await response.json();\r\n      // log(res)\r\n      // log(res.text)\r\n      if (response.status === 200) {\r\n        log(\"check1 is OK\");\r\n        return;\r\n      } else if (response.status === 404) {\r\n        // 作成パターン3の時に入庫場所のチェックは不要で、returnする\r\n        if (Number(sakusei) === 3) {\r\n          console.log(\"haitta\");\r\n          if (res.message === \"入庫場所コードが不正です。\") {\r\n            return;\r\n          }\r\n        } else {\r\n          console.log(res.message);\r\n          error_messages.push(res.message);\r\n          return;\r\n        }\r\n      }\r\n      // res.message !== undefined && render(< SnakbarComponent message={res.message} severity=\"error\" />)\r\n      // res.message !== undefined && error_messages.push(res.message);\r\n    } catch (error) {\r\n      console.log(error);\r\n      console.log(error.name);\r\n      // render(< SnakbarComponent message={`データベースに接続できませんでした。`} severity=\"warning\" />)\r\n    }\r\n  };\r\n\r\n  // 2. 出庫場所コード＋出庫棚・ラインコードが棚・ラインマスタに存在しない場合\r\n  const check2 = async () => {\r\n    //out_line_cdが*の時はエラーチェックしない\r\n    if (out_line_cd !== \"*\" && out_line_cd !== \"\") {\r\n      try {\r\n        const get_url = `${address}/check/two/${encodeURI(\r\n          out_pl_cd\r\n        )}/${encodeURI(out_line_cd)}`;\r\n        const response = await fetch(get_url);\r\n        const res = await response.json();\r\n\r\n        // const res = await response.json();\r\n        log(\"CHECK2 \", res);\r\n        if (response.status === 200) {\r\n          log(\"check2 is OK\");\r\n          return;\r\n        } else if (response.status === 404) {\r\n          error_messages.push(res.message);\r\n          log(res.message);\r\n          return;\r\n        }\r\n      } catch (error) {\r\n        log(\"CHECK2 ERROR=>\", error);\r\n      }\r\n    }\r\n    return;\r\n  };\r\n\r\n  //作成パターンが3の時またはin_line_cが「-」ならエラーチェック未実施。名称には「設定しない」を表示。(入庫ラインコードが空白＝'null'のときもエラーチェックなし)\r\n  // 3. 入庫場所コード＋棚・入庫ラインコードが棚・ラインマスタに存在しない場合\r\n  const check3 = async () => {\r\n    const ignore_chk_list = [\"-\", \"ー\", \"ｰ\", \"－\"];\r\n    if (Number(sakusei) !== 3 && !ignore_chk_list.includes(in_line_cd)) {\r\n      if (in_line_cd === \"\") {\r\n        error_messages.push(\"入庫棚・ラインコードが不正です。\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const get_url = `${address}/check/three/${encodeURI(\r\n          in_pl_cd\r\n        )}/${encodeURI(in_line_cd)}`;\r\n        const response = await fetch(get_url);\r\n        const res = await response.json();\r\n        log(in_line_cd);\r\n        // log(res)\r\n        // const res2 = await response.json();\r\n        // log(res2)\r\n        if (response.status === 200) {\r\n          log(\"check3 is OK\");\r\n          return;\r\n        } else if (response.status === 404) {\r\n          log(res.message);\r\n          error_messages.push(res.message);\r\n          return;\r\n        }\r\n      } catch (error) {\r\n        log(\"CHECK3 ERROR=>\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const check4 = () => {\r\n    // 4.数量が0以下または数量が在庫より大きいとき\r\n    (Number(unit_qty.replaceAll(',', '')) <= 0 || Number(unit_qty.replaceAll(',', '')) > max_unit_qty) && error_messages.push(\"数量が不正です。\");\r\n\r\n    // 5．作区・指図が空白\r\n    (sakuzu_temp === undefined || sakuzu_temp === \"\" || !sakuzu_temp) &&\r\n      error_messages.push(\"作区・指図を入力してください。\");\r\n\r\n    // 6．作成パターンは１～４以外\r\n    (Number(sakusei) > 4 || Number(sakusei) < 1) &&\r\n      error_messages.push(\"作成パターンが不正です。\");\r\n\r\n    // // 7.人員コードが社員マスタに存在しない場合入力がないか、間違っている場合\r\n    // (usr_cd_name === \"人員コードが不正です。\" || !usr_cd || !usr_cd_name) &&\r\n    //   error_messages.push(\"人員コードが不正です。\");\r\n  };\r\n\r\n  const check_handle_staff = async () => {\r\n    log(\"handle_staff_input\");\r\n    // 人員コードが社員マスタに存在しない場合,入力がない場合\r\n    if (usr_cd_name === \"人員コードが不正です。\" || !usr_cd) {\r\n      error_messages.push(\"人員コードが不正です。\");\r\n      return\r\n    }\r\n    try {\r\n      const url = `${address}/staff/${encodeURI(usr_cd)}`;\r\n      const response = await fetch(url);\r\n      const result = await response.json();\r\n      if (result.length === 0) {\r\n        error_messages.push(\"人員コードが不正です。\")\r\n      } else if (result.length === 0) {\r\n        console.log(\"user_code is ok\")\r\n      }\r\n\r\n    } catch (error) {\r\n      log(\"Staff INPUT has error=> \", error);\r\n\r\n      // reset_usr_cd();\r\n      // render(< SnakbarComponent message={`データベースに接続できませんでした。`} severity=\"warning\" />)\r\n    }\r\n    // set_submitRefClicked(false);\r\n  };\r\n  const register = async () => {\r\n    const post_api = `${address}/info/add`;\r\n    const controller = new AbortController();\r\n    setTimeout(() => controller.abort(), 4000);\r\n\r\n    log(\"登録開始\");\r\n    log(\"SEARCH DATA=> \", search_data);\r\n    const change_to_null = [\"-\", \"ー\", \"ｰ\", \"－\", \"\", \" \"];\r\n\r\n    try {\r\n      const content = {\r\n        itm_cd,\r\n        out_pl_cd,\r\n        out_line_cd,\r\n        in_pl_cd: change_to_null.includes(in_pl_cd) ? null : in_pl_cd,\r\n        in_line_cd: change_to_null.includes(in_line_cd) ? null : in_line_cd,\r\n        unit_qty: Number(unit_qty.replaceAll(',', '')),\r\n        // unit_cd: Number(unit_cd.replaceAll(',', '')),\r\n        unit_cd,\r\n        inst_no,\r\n        lot_no,\r\n        sub_lot_no,\r\n        sakusei,\r\n        usr_cd,\r\n        act_dt,\r\n        ac_dt,\r\n      };\r\n      log(\"登録内容=> \", content);\r\n      const myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: JSON.stringify(content),\r\n        redirect: \"follow\",\r\n        signal: controller.signal,\r\n      };\r\n\r\n      const response = await fetch(post_api, requestOptions);\r\n      console.log(response);\r\n      const result = await response.json();\r\n      console.log(\"result => \", result);\r\n      if (result.status === \"OK\") {\r\n        log(\"登録終了\");\r\n      } else if (result.status === \"Error\") {\r\n        render(\r\n          <SnakbarComponent\r\n            message={`登録失敗: データベースに接続できませんでした。`}\r\n            severity=\"warning\"\r\n          />\r\n        );\r\n        return;\r\n      }\r\n\r\n      // update system_settings seq_no to the latest data_no of shipment_info\r\n      await fetch(`${address}/seq_no`);\r\n\r\n      //登録完了後、詳細内容を初期値に戻す\r\n      set_in_line_cd(\"\");\r\n      set_in_pl_cd(\"\");\r\n      set_in_pl_cd_name(\"\");\r\n      set_in_line_cd_name(\"\");\r\n      set_sakuzu_temp(null);\r\n      set_act_dt(new Date().toISOString().slice(0, 10));\r\n\r\n      // 在庫情報テーブルの「在庫数」の値を減算する\r\n      let new_selected_index = selected_index;\r\n      const new_unit_qty = search_data[selected_index].unit_qty - Number(unit_qty.replaceAll(',', ''));\r\n      let new_search_data = [...search_data];\r\n\r\n      new_search_data[selected_index] = {\r\n        ...new_search_data[selected_index],\r\n        unit_qty: new_unit_qty,\r\n      };\r\n      set_search_data(new_search_data);\r\n      set_unit_qty(\"\");\r\n      set_details_changed_flag(false);\r\n      set_selected_index(new_selected_index);\r\n      //入庫場所コードにカーソルを合わせる。\r\n      document.getElementById(\"in_pl_cd\").focus();\r\n      // result.status === 'OK' && render(< SnakbarComponent message=\"登録が完了しました。\" severity=\"success\" />);\r\n    } catch (err) {\r\n      console.log(err);\r\n      console.log(err.name);\r\n      render(\r\n        <SnakbarComponent\r\n          message={`登録失敗: データベースに接続できませんでした。`}\r\n          severity=\"warning\"\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  async function master_check_flg() {\r\n    await handle_staff_input();\r\n    await check1();\r\n\r\n    await check2();\r\n\r\n    await check3();\r\n\r\n    await check_handle_staff();\r\n\r\n\r\n\r\n    check4();\r\n    // await check5();\r\n\r\n    log(\"ERROR MESSAGES=> \", error_messages);\r\n    if (error_messages.length === 0) {\r\n      const error_flag = false;\r\n      return error_flag;\r\n    } else {\r\n      const error_flag = true;\r\n      log(\"ERRORS=> \", error_messages);\r\n      log(\"FLAG=> \", error_flag);\r\n      return error_flag;\r\n    }\r\n  }\r\n\r\n  // call the api\r\n  const on_register_form = async (e) => {\r\n    document.activeElement.blur(); //連続でエラーポップアップが出るのを防ぐため\r\n    // !usr_cd_name && await handle_staff_input();\r\n    //エラーチェック処理\r\n    const check_flg = await master_check_flg();\r\n    //エラーなし\r\n    if (check_flg === false) {\r\n      // set_submitRefClicked(false)\r\n      await register();\r\n    } else if (check_flg === true) {\r\n      set_submitRefClicked(false);\r\n      render(\r\n        <SnakbarComponent message={error_messages.join(\" \")} severity=\"error\" />\r\n      );\r\n    }\r\n    error_messages = []; //エラー内容のリセット\r\n    set_submitRefClicked(false);\r\n    return;\r\n  };\r\n\r\n  return (\r\n    <section id=\"details\" className={classes.root}>\r\n      <div>\r\n        <h3>詳細内容</h3>\r\n      </div>\r\n      {/* <form onSubmit={on_register_form}> */}\r\n      {/* <form style={{ paddingTop: '.5rem', paddingBottom: '1rem' }} onSubmit={blur_tform}> */}\r\n      <form style={{ paddingTop: \".5rem\", paddingBottom: \"1rem\" }}>\r\n        <section>\r\n          <div className=\"sec_one\">\r\n            <div>\r\n              <TextField\r\n                id=\"out_pl_cd\"\r\n                name=\"out_pl_cd\"\r\n                label=\"出庫場所コード\"\r\n                variant=\"standard\"\r\n                // value={search_data[selected_index]?.out_loc_cd ? search_data[selected_index].out_loc_cd : \" \"}\r\n                value={out_pl_cd}\r\n                size=\"small\"\r\n                disabled\r\n              />\r\n            </div>\r\n            <TextField\r\n              className=\"fixed_width add_margin_70\"\r\n              id=\"out_pl_cd_name\"\r\n              name=\"out_pl_cd_name\"\r\n              variant=\"standard\"\r\n              label=\"場所名称\"\r\n              // value={search_data[selected_index]?.out_loc_name ? search_data[selected_index]?.out_loc_name : \" \"}\r\n              value={out_pl_cd_name}\r\n              size=\"small\"\r\n              disabled\r\n            />\r\n          </div>\r\n\r\n          <div className=\"sec_two\">\r\n            <TextField\r\n              id=\"out_line_cd\"\r\n              name=\"out_line_cd\"\r\n              label=\"出庫棚・ラインコード\"\r\n              variant=\"standard\"\r\n              value={out_line_cd}\r\n              onChange={(e) => {\r\n                set_out_line_cd(e.target.value);\r\n              }}\r\n              size=\"small\"\r\n              disabled\r\n            />\r\n            <TextField\r\n              className=\"fixed_width add_margin_70\"\r\n              id=\"out_line_cd_name\"\r\n              variant=\"standard\"\r\n              label=\"棚・ライン名称\"\r\n              value={out_line_cd_name}\r\n              size=\"small\"\r\n              disabled\r\n            />\r\n          </div>\r\n        </section>\r\n        <section>\r\n          <div className=\"sec_one\">\r\n            <div>\r\n              <TextField\r\n                id=\"in_pl_cd\"\r\n                // ref={nyukoRef}  //使っていない\r\n                label=\"入庫場所コード\"\r\n                onChange={(event) => {\r\n                  set_in_pl_cd(event.target.value);\r\n                  set_in_pl_cd_name(\"\");\r\n                  set_details_changed_flag(true);\r\n                }}\r\n                value={in_pl_cd}\r\n                onBlur={focusout_nyuko_basho}\r\n                // on\r\n                // onKeyDown={focusout_nyuko_basho}\r\n                // disabled={Number(sakusei) === 3 ? true : false}\r\n                // variant={Number(sakusei) === 3 ? \"standard\" : \"outlined\"}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n              />\r\n              <MaterialModal title=\"入庫場所\" api_name=\"nyukobasho\" />\r\n            </div>\r\n            <TextField\r\n              id=\"in_pl_cd_name\"\r\n              variant=\"standard\"\r\n              className=\"fixed_width\"\r\n              label=\"場所名称\"\r\n              // value={in_pl_cd_name ? in_pl_cd_name : \" \"}\r\n              value={in_pl_cd_name}\r\n              size=\"small\"\r\n              disabled\r\n            />\r\n          </div>\r\n          <div className=\"sec_two\">\r\n            <div>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                // variant={Number(sakusei) === 3 ? \"standard\" : \"outlined\"}\r\n                size=\"small\"\r\n                value={in_line_cd}\r\n                id=\"in_line_cd\"\r\n                label=\"入庫棚・ラインコード\"\r\n                onChange={(event) => {\r\n                  set_in_line_cd(event.target.value);\r\n                  set_in_line_cd_name(\"\");\r\n                  (event.target.value === \"-\" ||\r\n                    event.target.value === \"ー\" ||\r\n                    event.target.value === \"ｰ\" ||\r\n                    event.target.value === \"－\") &&\r\n                    set_in_line_cd_name(\"設定しない\");\r\n                  set_details_changed_flag(true);\r\n                }}\r\n                onFocus={focusin_nyuko_line}\r\n                onBlur={focusout_nyuko_line}\r\n              // disabled={Number(sakusei) === 3 ? true : false}\r\n              // onKeyDown={focusout_nyuko_line}\r\n              // inputProps={in_line_inputProps}\r\n              />\r\n              <MaterialModal title=\"入庫棚・ライン\" api_name=\"nyukoline\" />\r\n            </div>\r\n            <TextField\r\n              id=\"in_line_cd_name\"\r\n              variant=\"standard\"\r\n              label=\"棚・ライン名称\"\r\n              className=\"fixed_width\"\r\n              // value={in_line_cd_name ? in_line_cd_name : \" \"}\r\n              value={in_line_cd_name}\r\n              size=\"small\"\r\n              disabled\r\n            />\r\n          </div>\r\n        </section>\r\n        <section>\r\n          <div className=\"sec_one\">\r\n            <TextField\r\n              id=\"unit_qty\"\r\n              // ref={unit_qtyRef}\r\n              label=\"数量\"\r\n              variant=\"outlined\"\r\n              type=\"text\"\r\n              // type=\"number\"\r\n\r\n              size=\"small\"\r\n              onKeyDown={(e) => {\r\n                const invalidChars = [\"-\", \"+\", \"e\", \".\"];\r\n                if (invalidChars.includes(e.key)) e.preventDefault();\r\n              }}\r\n              onChange={(e) => {\r\n                const val = e.target.value.replaceAll(',', '');\r\n                if (Number.isInteger(Number(val))) {\r\n                  handle_unit_qty(e);\r\n                  set_details_changed_flag(true);\r\n                } else return;\r\n              }}\r\n              value={unit_qty}\r\n              inputProps={{ min: 0, lang: 'jp' }}\r\n            />\r\n            <TextField\r\n              id=\"unit_cd\"\r\n              className=\"add_margin_70\"\r\n              label=\"荷姿単位\"\r\n              variant=\"standard\"\r\n              value={unit_cd}\r\n              size=\"small\"\r\n              disabled\r\n            />\r\n          </div>\r\n          <div className=\"sec_two\">\r\n            <TextField\r\n              id=\"lot_no\"\r\n              label=\"ロットNO\"\r\n              variant={Number(sakusei) === 4 ? \"outlined\" : \"standard\"}\r\n              // value={Number(sakusei) === 4 ? lot_no : search_data[selected_index]?.lot_no}\r\n              value={lot_no}\r\n              onChange={\r\n                Number(sakusei) === 4\r\n                  ? (e) => {\r\n                    set_lot_no(e.target.value);\r\n                    set_details_changed_flag(true);\r\n                  }\r\n                  : () => { }\r\n                // search_data[selected_index]?.sub_lot_no\r\n              }\r\n              size=\"small\"\r\n              inputProps={{ maxLength: 15 }}\r\n              disabled={Number(sakusei) === 4 ? false : true}\r\n            />\r\n            <TextField\r\n              id=\"sub_lot_no\"\r\n              className=\"add_margin_70\"\r\n              label=\"サブロットNO\"\r\n              inputProps={{ maxLength: 15 }}\r\n              variant={Number(sakusei) === 4 ? \"outlined\" : \"standard\"}\r\n              // value={Number(sakusei) === 4 ? sub_lot_no : search_data[selected_index]?.sub_lot_no}\r\n              value={sub_lot_no}\r\n              onChange={\r\n                Number(sakusei) === 4\r\n                  ? (e) => {\r\n                    set_sub_lot_no(e.target.value);\r\n                    set_details_changed_flag(true);\r\n                  }\r\n                  : () => { }\r\n              }\r\n              size=\"small\"\r\n              disabled={Number(sakusei) === 4 ? false : true}\r\n            />\r\n          </div>\r\n        </section>\r\n        <section>\r\n          <div className=\"sec_one\">\r\n            <FormControl className=\"customInput\">\r\n              <Autocomplete\r\n                id=\"inst_no\"\r\n                options={sakuzu_data}\r\n                // options={[ //demo data\r\n                //     { code: \"1-0000\", name: \"共通\" },\r\n                //     { code: \"1-0001\", name: \"エピ成長\" },\r\n                //     { code: \"1-0002\", name: \"プロセス（レーザー）通常\" },\r\n                //     { code: \"1-0003\", name: \"プロセス（レーザー）非常\" },\r\n                //     { code: \"1-0004\", name: \"プロセス4\" },\r\n                //     { code: \"1-0005\", name: \"プロセス5\" },\r\n                //     { code: \"1-0006\", name: \"工程検査\" },\r\n                //     { code: \"1-1001\", name: \"製品認定1\" }]\r\n                // }\r\n                size=\"small\"\r\n                classes={{\r\n                  root: classes.autocom,\r\n                  option: classes.option,\r\n                  noOptions: classes.option,\r\n                  input: classes.input,\r\n                  inputRoot: classes.inputRoot,\r\n                }}\r\n                autoHighlight\r\n                autoComplete\r\n                autoSelect\r\n                value={sakuzu_temp}\r\n                onChange={(event, value) => {\r\n                  set_details_changed_flag(true);\r\n                  if (value !== null) {\r\n                    let sakuzu_code = value.code;\r\n                    sakuzu_code = sakuzu_code.split(\"-\").join(\"\");\r\n                    set_inst_no(sakuzu_code);\r\n                  }\r\n                  set_sakuzu_temp(value);\r\n                  // log(value)\r\n                }}\r\n                getOptionLabel={(option) => {\r\n                  const label = `${option.code}: ${option.name}`;\r\n                  return label;\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"作区・指図\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                )}\r\n              />\r\n            </FormControl>\r\n          </div>\r\n          <div className=\"sec_two\">\r\n            <TextField\r\n              id=\"usr_cd\"\r\n              label=\"人員コード\"\r\n              value={usr_cd}\r\n              variant=\"outlined\"\r\n              onBlur={handle_staff_input}\r\n              onChange={(event) => {\r\n                set_usr_cd_name('');\r\n                // set_submitRefClicked(true);\r\n                set_usr_cd(event.target.value);\r\n                set_details_changed_flag(true);\r\n              }}\r\n              size=\"small\"\r\n            />\r\n            <TextField\r\n              id=\"usr_cd_name\"\r\n              className=\"add_margin_70\"\r\n              label=\"人員名称\"\r\n              variant=\"standard\"\r\n              value={usr_cd_name}\r\n              size=\"small\"\r\n              disabled\r\n            />\r\n          </div>\r\n        </section>\r\n        <section className=\"customInput\">\r\n          <div className=\"sec_one\">\r\n            <TextField\r\n              id=\"act_dt\"\r\n              label=\"実績日\"\r\n              type=\"date\"\r\n              value={act_dt}\r\n              size=\"small\"\r\n              // inputProps={{ min: \"2015-01-01\", max: new Date().toISOString().slice(0, 10) }}\r\n              inputProps={{ min: \"2015-01-01\" }}\r\n              onChange={(event) => {\r\n                let d = new Date(event.target.value);\r\n                if (d.isValid()) {\r\n                  set_act_dt(event.target.value);\r\n                  set_ac_dt(event.target.value); //計上日にも反映\r\n                } else {\r\n                  set_act_dt(new Date().toISOString().slice(0, 10));\r\n                  set_ac_dt(new Date().toISOString().slice(0, 10)); //計上日にも反映\r\n                }\r\n                set_details_changed_flag(true);\r\n              }}\r\n              // tabを押したらfocusは登録ボタン\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Tab\") {\r\n                  e.preventDefault();\r\n                  // alert(\"\");\r\n                  document.getElementById(\"register_btn\").focus();\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n          <div\r\n            className=\"sec_two just-space-between\"\r\n            style={{ marginTop: \".6rem\" }}\r\n          >\r\n            <TextField\r\n              id=\"ac_dt\"\r\n              label=\"計上日\"\r\n              type=\"date\"\r\n              value={ac_dt}\r\n              size=\"small\"\r\n              // inputProps={{ min: \"2015-01-01\", max: new Date().toISOString().slice(0, 10) }}\r\n              inputProps={{ min: \"2015-01-01\" }}\r\n              onChange={(event) => {\r\n                let d = new Date(event.target.value);\r\n                d.isValid()\r\n                  ? set_ac_dt(event.target.value)\r\n                  : set_ac_dt(new Date().toISOString().slice(0, 10));\r\n                set_details_changed_flag(true);\r\n              }}\r\n              onInput={(event) => {\r\n                let d = new Date(event.target.value);\r\n                d.isValid()\r\n                  ? set_ac_dt(event.target.value)\r\n                  : set_ac_dt(new Date().toISOString().slice(0, 10));\r\n              }}\r\n            />\r\n            <Button\r\n              id=\"register_btn\"\r\n              className=\"add_margin_70a\"\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              type=\"submit\"\r\n              // onSubmit={() => { console.log(\"登録\") }}\r\n              disabled={submitRefClicked}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                set_submitRefClicked(true);\r\n                on_register_form(e);\r\n              }}\r\n              startIcon={<PlaylistAddCheckIcon />}\r\n              color=\"primary\"\r\n            >\r\n              登録\r\n            </Button>\r\n          </div>\r\n        </section>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","import React, { useState } from \"react\";\r\nimport HeaderComponent from \"./header/HeaderComponent\";\r\nimport SearchForm from \"./searchForm/SearchForm\";\r\nimport StockInfo from \"./stockInfo/StockInfo\";\r\nimport Details from \"./details/Details\";\r\nimport \"./app.css\";\r\nimport { SakuseiPatternContext } from \"./globalData/SakuseiPatternContext\";\r\nimport { SearchDataContext } from \"./globalData/SearchDataContext\";\r\nimport { SelectedIndex } from \"./globalData/SelectedIndex\";\r\nimport { DecidedIndex } from \"./globalData/DecidedIndex\";\r\nimport { Details_changed_flg } from \"./globalData/Details_changed_flg\";\r\n\r\nfunction App() {\r\n  const raw_search_data = []; // table's initial data is emptys\r\n  const [details_changed_flag, set_details_changed_flag] = useState(false);\r\n  const [sakusei, set_sakusei] = useState(1);\r\n  const [sakusei_name, set_sakusei_name] = useState(\"出庫と在庫引落し\");\r\n  const [search_data, set_search_data] = useState(raw_search_data);\r\n  const [selected_index, set_selected_index] = useState(\"\");\r\n\r\n  const [selected_code, setSelected_code] = useState(null);\r\n  const [selected_name, setSelected_name] = useState(null);\r\n\r\n  // itm\r\n  const [decided_code_itm, set_decided_code_itm] = useState(\"\");\r\n  const [decided_name_itm, set_decided_name_itm] = useState(\"\");\r\n\r\n  // loc\r\n  const [decided_code_loc, set_decided_code_loc] = useState(\"\");\r\n  const [decided_name_loc, set_decided_name_loc] = useState(\"\");\r\n\r\n  // in loc\r\n  const [decided_code_in_loc, set_decided_code_in_loc] = useState(\"\");\r\n  const [decided_name_in_loc, set_decided_name_in_loc] = useState(\"\");\r\n\r\n  //in line\r\n  const [decided_code_in_line, set_decided_code_in_line] = useState(\"\");\r\n  const [decided_name_in_line, set_decided_name_in_line] = useState(\"\");\r\n\r\n  const [decided_itm_flag, set_decided_itm_flag] = useState(false);\r\n  const [decided_loc_flag, set_decided_loc_flag] = useState(false);\r\n  const [decided_in_loc_flag, set_decided_in_loc_flag] = useState(false);\r\n  const [decided_in_line_flag, set_decided_in_line_flag] = useState(false);\r\n\r\n  // const [modal_kettei, set_modal_kettei] = useState(false);\r\n  // console.log(search_data)\r\n  return (\r\n    <main>\r\n      <SakuseiPatternContext.Provider\r\n        value={{\r\n          saku: [sakusei, set_sakusei],\r\n          saku_name: [sakusei_name, set_sakusei_name],\r\n        }}\r\n      >\r\n        <SearchDataContext.Provider value={{ search_data, set_search_data }}>\r\n          <SelectedIndex.Provider\r\n            value={{\r\n              idx: [selected_index, set_selected_index],\r\n              selected_codes: [selected_code, setSelected_code],\r\n              selected_names: [selected_name, setSelected_name],\r\n            }}\r\n          >\r\n            <DecidedIndex.Provider\r\n              value={{\r\n                decided_codes_itm: [decided_code_itm, set_decided_code_itm],\r\n                decided_names_itm: [decided_name_itm, set_decided_name_itm],\r\n\r\n                decided_codes_loc: [decided_code_loc, set_decided_code_loc],\r\n                decided_names_loc: [decided_name_loc, set_decided_name_loc],\r\n\r\n                decided_codes_in_loc: [\r\n                  decided_code_in_loc,\r\n                  set_decided_code_in_loc,\r\n                ],\r\n                decided_names_in_loc: [\r\n                  decided_name_in_loc,\r\n                  set_decided_name_in_loc,\r\n                ],\r\n\r\n                decided_codes_in_line: [\r\n                  decided_code_in_line,\r\n                  set_decided_code_in_line,\r\n                ],\r\n                decided_names_in_line: [\r\n                  decided_name_in_line,\r\n                  set_decided_name_in_line,\r\n                ],\r\n\r\n                decided_itm_flags: [decided_itm_flag, set_decided_itm_flag],\r\n                decided_loc_flags: [decided_loc_flag, set_decided_loc_flag],\r\n                decided_in_loc_flags: [decided_in_loc_flag,set_decided_in_loc_flag],\r\n                decided_in_line_flags: [decided_in_line_flag, set_decided_in_line_flag],\r\n              }}\r\n            >\r\n              <Details_changed_flg.Provider\r\n                value={{\r\n                  details: [details_changed_flag, set_details_changed_flag],\r\n                }}\r\n              >\r\n                <HeaderComponent />\r\n                <SearchForm />\r\n                <StockInfo />\r\n                <Details />\r\n              </Details_changed_flg.Provider>\r\n            </DecidedIndex.Provider>\r\n          </SelectedIndex.Provider>\r\n        </SearchDataContext.Provider>\r\n      </SakuseiPatternContext.Provider>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { jaJP } from '@material-ui/core/locale';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n// import ReportMcframe from \"./reportMcframe\"\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#33ab9f',\r\n      main: '#009879',\r\n      dark: '#00695f',\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      light: '#ff0000',\r\n      main: '#ff0000',\r\n      dark: '#ff0000',\r\n      contrastText: '#000',\r\n    },\r\n  },\r\n}, jaJP);\r\n\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme}>\r\n    {/* <ReportMcframe /> */}\r\n    <CssBaseline />\r\n    <App />\r\n  </ThemeProvider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}